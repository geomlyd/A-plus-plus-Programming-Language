Terminals unused in grammar

    QUESTION_MARK
    COMMENT_TOKEN
    BAD_TOKEN


State 127 conflicts: 1 shift/reduce


Grammar

    0 $accept: bogusStart $end

    1 bogusStart: program
    2           | PARSE_EXPR nonemptystmts
    3           | PARSE_EXPR expr

    4 program: stmts

    5 stmts: stmts stmt
    6      | ε

    7 stmt: expr SEMICOLON
    8     | ifstmt
    9     | whilestmt
   10     | forstmt
   11     | returnstmt
   12     | BREAK SEMICOLON
   13     | CONTINUE SEMICOLON
   14     | block
   15     | funcdef
   16     | SEMICOLON
   17     | error SEMICOLON

   18 expr: assignexpr
   19     | expr PLUS expr
   20     | expr MINUS expr
   21     | expr MULTIPLICATION expr
   22     | expr DIVISION expr
   23     | expr MODULO expr
   24     | expr GREATER_THAN expr
   25     | expr GREATER_OR_EQUAL expr
   26     | expr LESS_THAN expr
   27     | expr LESS_OR_EQUAL expr
   28     | expr EQUAL expr
   29     | expr NOT_EQUAL expr
   30     | expr AND expr
   31     | expr OR expr
   32     | term

   33 term: LEFT_PAREN expr RIGHT_PAREN
   34     | MINUS expr
   35     | NOT expr
   36     | PLUS_PLUS lvalue
   37     | lvalue PLUS_PLUS
   38     | MINUS_MINUS lvalue
   39     | lvalue MINUS_MINUS
   40     | primary

   41 assignexpr: lvalue ASSIGNMENT expr

   42 primary: quasiquotes
   43        | escape
   44        | inline
   45        | unparsed
   46        | compiledstring
   47        | lvalue
   48        | call
   49        | objectdef
   50        | LEFT_PAREN funcdef RIGHT_PAREN
   51        | const

   52 lvalue: ID
   53       | DOLLAR_IDENT
   54       | LOCAL ID
   55       | DOUBLE_COLON ID
   56       | member

   57 member: lvalue DOT ID
   58       | lvalue DOT DOLLAR_IDENT
   59       | lvalue LEFT_BRACKET expr RIGHT_BRACKET
   60       | call DOT ID
   61       | call DOT DOLLAR_IDENT
   62       | call LEFT_BRACKET expr RIGHT_BRACKET

   63 call: call LEFT_PAREN elist RIGHT_PAREN
   64     | lvalue callsuffix
   65     | LEFT_PAREN funcdef RIGHT_PAREN LEFT_PAREN elist RIGHT_PAREN

   66 callsuffix: normcall
   67           | methodcall

   68 normcall: LEFT_PAREN elist RIGHT_PAREN

   69 methodcall: DOT_DOT ID LEFT_PAREN elist RIGHT_PAREN

   70 elist: elistnotempty
   71      | ε

   72 elistnotempty: commalist argument

   73 objelistnotempty: objcommalist expr

   74 commalist: commalist argument COMMA
   75          | ε

   76 objcommalist: objcommalist expr COMMA
   77             | ε

   78 argument: expr
   79         | ID COLON expr

   80 objectdef: LEFT_BRACKET objectdinner RIGHT_BRACKET

   81 objectdinner: objelistnotempty
   82             | indexed
   83             | ε

   84 indexed: commaindexed indexedelem

   85 commaindexed: commaindexed indexedelem COMMA
   86             | ε

   87 indexedelem: LEFT_BRACE expr COLON expr RIGHT_BRACE

   88 block: LEFT_BRACE stmts RIGHT_BRACE

   89 funcdef: funcprefix LEFT_PAREN idlist RIGHT_PAREN block

   90 funcprefix: FUNCTION funcname

   91 funcname: ID
   92         | ε

   93 const: INTCONST
   94      | REALCONST
   95      | STRINGCONST
   96      | NIL
   97      | TRUE
   98      | FALSE

   99 idlist: commaidlist formal
  100       | ε

  101 commaidlist: commaidlist formal COMMA
  102            | ε

  103 formal: ID
  104       | ID ASSIGNMENT expr

  105 ifprefix: IF LEFT_PAREN expr RIGHT_PAREN

  106 ifstmt: ifprefix stmt
  107       | ifprefix stmt elseprefix stmt

  108 elseprefix: ELSE

  109 whilestart: WHILE

  110 whilecond: LEFT_PAREN expr RIGHT_PAREN

  111 whilestmt: whilestart whilecond stmt

  112 forprefix: FOR LEFT_PAREN elist SEMICOLON expr SEMICOLON

  113 forstmt: forprefix elist RIGHT_PAREN stmt

  114 returnstmt: RETURN expr SEMICOLON
  115           | RETURN SEMICOLON

  116 quasiquotes: LEFT_QUASI_QUOTE quotedrules RIGHT_QUASI_QUOTE

  117 nonemptystmts: nonemptystmts stmt
  118              | stmt

  119 objelistmulti: objelistmulti COMMA expr
  120              | expr

  121 quotedrules: nonemptystmts
  122            | objelistmulti

  123 escape: TILDA ID
  124       | TILDA LEFT_PAREN expr RIGHT_PAREN

  125 inline: EXCLAMATION_MARK LEFT_PAREN expr RIGHT_PAREN

  126 unparsed: SHARP LEFT_PAREN expr RIGHT_PAREN

  127 compiledstring: AT LEFT_PAREN expr RIGHT_PAREN


Terminals, with rules where they appear

    $end (0) 0
    error (256) 17
    PARSE_EXPR <intValue> (258) 2 3
    INTCONST <intValue> (259) 93
    REALCONST <doubleValue> (260) 94
    STRINGCONST <stringValue> (261) 95
    ID <stringValue> (262) 52 54 55 57 60 69 79 91 103 104 123
    DOLLAR_IDENT <stringValue> (263) 53 58 61
    IF (264) 105
    ELSE (265) 108
    WHILE (266) 109
    FOR (267) 112
    FUNCTION (268) 90
    RETURN (269) 114 115
    BREAK (270) 12
    CONTINUE (271) 13
    AND (272) 30
    NOT (273) 35
    OR (274) 31
    LOCAL (275) 54
    TRUE (276) 97
    FALSE (277) 98
    NIL (278) 96
    ASSIGNMENT (279) 41 104
    PLUS (280) 19
    MINUS (281) 20 34
    MULTIPLICATION (282) 21
    DIVISION (283) 22
    MODULO (284) 23
    EQUAL (285) 28
    NOT_EQUAL (286) 29
    PLUS_PLUS (287) 36 37
    MINUS_MINUS (288) 38 39
    GREATER_THAN (289) 24
    LESS_THAN (290) 26
    GREATER_OR_EQUAL (291) 25
    LESS_OR_EQUAL (292) 27
    EXCLAMATION_MARK (293) 125
    TILDA (294) 123 124
    AT (295) 127
    SHARP (296) 126
    QUESTION_MARK (297)
    LEFT_BRACE (298) 87 88
    RIGHT_BRACE (299) 87 88
    LEFT_BRACKET (300) 59 62 80
    RIGHT_BRACKET (301) 59 62 80
    LEFT_PAREN (302) 33 50 63 65 68 69 89 105 110 112 124 125 126 127
    RIGHT_PAREN (303) 33 50 63 65 68 69 89 105 110 113 124 125 126 127
    LEFT_QUASI_QUOTE (304) 116
    RIGHT_QUASI_QUOTE (305) 116
    SEMICOLON (306) 7 12 13 16 17 112 114 115
    COMMA (307) 74 76 85 101 119
    COLON (308) 79 87
    DOUBLE_COLON (309) 55
    DOT (310) 57 58 60 61
    DOT_DOT (311) 69
    COMMENT_TOKEN (312)
    BAD_TOKEN (313)
    UMINUS (314)


Nonterminals, with rules where they appear

    $accept (60)
        on left: 0
    bogusStart (61)
        on left: 1 2 3
        on right: 0
    program <ObjectValue> (62)
        on left: 4
        on right: 1
    stmts <ObjectValue> (63)
        on left: 5 6
        on right: 4 5 88
    stmt <ObjectValue> (64)
        on left: 7 8 9 10 11 12 13 14 15 16 17
        on right: 5 106 107 111 113 117 118
    expr <ObjectValue> (65)
        on left: 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32
        on right: 3 7 19 20 21 22 23 24 25 26 27 28 29 30 31 33 34 35 41 59 62 73 76 78 79 87 104 105 110 112 114 119 120 124 125 126 127
    term <ObjectValue> (66)
        on left: 33 34 35 36 37 38 39 40
        on right: 32
    assignexpr <ObjectValue> (67)
        on left: 41
        on right: 18
    primary <ObjectValue> (68)
        on left: 42 43 44 45 46 47 48 49 50 51
        on right: 40
    lvalue <ObjectValue> (69)
        on left: 52 53 54 55 56
        on right: 36 37 38 39 41 47 57 58 59 64
    member <ObjectValue> (70)
        on left: 57 58 59 60 61 62
        on right: 56
    call <ObjectValue> (71)
        on left: 63 64 65
        on right: 48 60 61 62 63
    callsuffix <ObjectValue> (72)
        on left: 66 67
        on right: 64
    normcall <ObjectValue> (73)
        on left: 68
        on right: 66
    methodcall <ObjectValue> (74)
        on left: 69
        on right: 67
    elist <ObjectValue> (75)
        on left: 70 71
        on right: 63 65 68 69 112 113
    elistnotempty <ObjectValue> (76)
        on left: 72
        on right: 70
    objelistnotempty <ObjectValue> (77)
        on left: 73
        on right: 81
    commalist <ObjectValue> (78)
        on left: 74 75
        on right: 72 74
    objcommalist <ObjectValue> (79)
        on left: 76 77
        on right: 73 76
    argument <ObjectValue> (80)
        on left: 78 79
        on right: 72 74
    objectdef <ObjectValue> (81)
        on left: 80
        on right: 49
    objectdinner <ObjectValue> (82)
        on left: 81 82 83
        on right: 80
    indexed <ObjectValue> (83)
        on left: 84
        on right: 82
    commaindexed <ObjectValue> (84)
        on left: 85 86
        on right: 84 85
    indexedelem <ObjectValue> (85)
        on left: 87
        on right: 84 85
    block <ObjectValue> (86)
        on left: 88
        on right: 14 89
    funcdef <ObjectValue> (87)
        on left: 89
        on right: 15 50 65
    funcprefix <ObjectValue> (88)
        on left: 90
        on right: 89
    funcname <ObjectValue> (89)
        on left: 91 92
        on right: 90
    const <ObjectValue> (90)
        on left: 93 94 95 96 97 98
        on right: 51
    idlist <ObjectValue> (91)
        on left: 99 100
        on right: 89
    commaidlist <ObjectValue> (92)
        on left: 101 102
        on right: 99 101
    formal <ObjectValue> (93)
        on left: 103 104
        on right: 99 101
    ifprefix <ObjectValue> (94)
        on left: 105
        on right: 106 107
    ifstmt <ObjectValue> (95)
        on left: 106 107
        on right: 8
    elseprefix <ObjectValue> (96)
        on left: 108
        on right: 107
    whilestart <ObjectValue> (97)
        on left: 109
        on right: 111
    whilecond <ObjectValue> (98)
        on left: 110
        on right: 111
    whilestmt <ObjectValue> (99)
        on left: 111
        on right: 9
    forprefix <ObjectValue> (100)
        on left: 112
        on right: 113
    forstmt <ObjectValue> (101)
        on left: 113
        on right: 10
    returnstmt <ObjectValue> (102)
        on left: 114 115
        on right: 11
    quasiquotes <ObjectValue> (103)
        on left: 116
        on right: 42
    nonemptystmts <ObjectValue> (104)
        on left: 117 118
        on right: 2 117 121
    objelistmulti <ObjectValue> (105)
        on left: 119 120
        on right: 119 122
    quotedrules <ObjectValue> (106)
        on left: 121 122
        on right: 116
    escape <ObjectValue> (107)
        on left: 123 124
        on right: 43
    inline <ObjectValue> (108)
        on left: 125
        on right: 44
    unparsed <ObjectValue> (109)
        on left: 126
        on right: 45
    compiledstring <ObjectValue> (110)
        on left: 127
        on right: 46


State 0

    0 $accept: • bogusStart $end

    PARSE_EXPR  shift, and go to state 1

    $default  reduce using rule 6 (stmts)

    bogusStart  go to state 2
    program     go to state 3
    stmts       go to state 4


State 1

    2 bogusStart: PARSE_EXPR • nonemptystmts
    3           | PARSE_EXPR • expr

    error             shift, and go to state 5
    INTCONST          shift, and go to state 6
    REALCONST         shift, and go to state 7
    STRINGCONST       shift, and go to state 8
    ID                shift, and go to state 9
    DOLLAR_IDENT      shift, and go to state 10
    IF                shift, and go to state 11
    WHILE             shift, and go to state 12
    FOR               shift, and go to state 13
    FUNCTION          shift, and go to state 14
    RETURN            shift, and go to state 15
    BREAK             shift, and go to state 16
    CONTINUE          shift, and go to state 17
    NOT               shift, and go to state 18
    LOCAL             shift, and go to state 19
    TRUE              shift, and go to state 20
    FALSE             shift, and go to state 21
    NIL               shift, and go to state 22
    MINUS             shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    EXCLAMATION_MARK  shift, and go to state 26
    TILDA             shift, and go to state 27
    AT                shift, and go to state 28
    SHARP             shift, and go to state 29
    LEFT_BRACE        shift, and go to state 30
    LEFT_BRACKET      shift, and go to state 31
    LEFT_PAREN        shift, and go to state 32
    LEFT_QUASI_QUOTE  shift, and go to state 33
    SEMICOLON         shift, and go to state 34
    DOUBLE_COLON      shift, and go to state 35

    stmt            go to state 36
    expr            go to state 37
    term            go to state 38
    assignexpr      go to state 39
    primary         go to state 40
    lvalue          go to state 41
    member          go to state 42
    call            go to state 43
    objectdef       go to state 44
    block           go to state 45
    funcdef         go to state 46
    funcprefix      go to state 47
    const           go to state 48
    ifprefix        go to state 49
    ifstmt          go to state 50
    whilestart      go to state 51
    whilestmt       go to state 52
    forprefix       go to state 53
    forstmt         go to state 54
    returnstmt      go to state 55
    quasiquotes     go to state 56
    nonemptystmts   go to state 57
    escape          go to state 58
    inline          go to state 59
    unparsed        go to state 60
    compiledstring  go to state 61


State 2

    0 $accept: bogusStart • $end

    $end  shift, and go to state 62


State 3

    1 bogusStart: program •

    $default  reduce using rule 1 (bogusStart)


State 4

    4 program: stmts •
    5 stmts: stmts • stmt

    error             shift, and go to state 5
    INTCONST          shift, and go to state 6
    REALCONST         shift, and go to state 7
    STRINGCONST       shift, and go to state 8
    ID                shift, and go to state 9
    DOLLAR_IDENT      shift, and go to state 10
    IF                shift, and go to state 11
    WHILE             shift, and go to state 12
    FOR               shift, and go to state 13
    FUNCTION          shift, and go to state 14
    RETURN            shift, and go to state 15
    BREAK             shift, and go to state 16
    CONTINUE          shift, and go to state 17
    NOT               shift, and go to state 18
    LOCAL             shift, and go to state 19
    TRUE              shift, and go to state 20
    FALSE             shift, and go to state 21
    NIL               shift, and go to state 22
    MINUS             shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    EXCLAMATION_MARK  shift, and go to state 26
    TILDA             shift, and go to state 27
    AT                shift, and go to state 28
    SHARP             shift, and go to state 29
    LEFT_BRACE        shift, and go to state 30
    LEFT_BRACKET      shift, and go to state 31
    LEFT_PAREN        shift, and go to state 32
    LEFT_QUASI_QUOTE  shift, and go to state 33
    SEMICOLON         shift, and go to state 34
    DOUBLE_COLON      shift, and go to state 35

    $end  reduce using rule 4 (program)

    stmt            go to state 63
    expr            go to state 64
    term            go to state 38
    assignexpr      go to state 39
    primary         go to state 40
    lvalue          go to state 41
    member          go to state 42
    call            go to state 43
    objectdef       go to state 44
    block           go to state 45
    funcdef         go to state 46
    funcprefix      go to state 47
    const           go to state 48
    ifprefix        go to state 49
    ifstmt          go to state 50
    whilestart      go to state 51
    whilestmt       go to state 52
    forprefix       go to state 53
    forstmt         go to state 54
    returnstmt      go to state 55
    quasiquotes     go to state 56
    escape          go to state 58
    inline          go to state 59
    unparsed        go to state 60
    compiledstring  go to state 61


State 5

   17 stmt: error • SEMICOLON

    SEMICOLON  shift, and go to state 65


State 6

   93 const: INTCONST •

    $default  reduce using rule 93 (const)


State 7

   94 const: REALCONST •

    $default  reduce using rule 94 (const)


State 8

   95 const: STRINGCONST •

    $default  reduce using rule 95 (const)


State 9

   52 lvalue: ID •

    $default  reduce using rule 52 (lvalue)


State 10

   53 lvalue: DOLLAR_IDENT •

    $default  reduce using rule 53 (lvalue)


State 11

  105 ifprefix: IF • LEFT_PAREN expr RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 66


State 12

  109 whilestart: WHILE •

    $default  reduce using rule 109 (whilestart)


State 13

  112 forprefix: FOR • LEFT_PAREN elist SEMICOLON expr SEMICOLON

    LEFT_PAREN  shift, and go to state 67


State 14

   90 funcprefix: FUNCTION • funcname

    ID  shift, and go to state 68

    $default  reduce using rule 92 (funcname)

    funcname  go to state 69


State 15

  114 returnstmt: RETURN • expr SEMICOLON
  115           | RETURN • SEMICOLON

    INTCONST          shift, and go to state 6
    REALCONST         shift, and go to state 7
    STRINGCONST       shift, and go to state 8
    ID                shift, and go to state 9
    DOLLAR_IDENT      shift, and go to state 10
    NOT               shift, and go to state 18
    LOCAL             shift, and go to state 19
    TRUE              shift, and go to state 20
    FALSE             shift, and go to state 21
    NIL               shift, and go to state 22
    MINUS             shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    EXCLAMATION_MARK  shift, and go to state 26
    TILDA             shift, and go to state 27
    AT                shift, and go to state 28
    SHARP             shift, and go to state 29
    LEFT_BRACKET      shift, and go to state 31
    LEFT_PAREN        shift, and go to state 32
    LEFT_QUASI_QUOTE  shift, and go to state 33
    SEMICOLON         shift, and go to state 70
    DOUBLE_COLON      shift, and go to state 35

    expr            go to state 71
    term            go to state 38
    assignexpr      go to state 39
    primary         go to state 40
    lvalue          go to state 41
    member          go to state 42
    call            go to state 43
    objectdef       go to state 44
    const           go to state 48
    quasiquotes     go to state 56
    escape          go to state 58
    inline          go to state 59
    unparsed        go to state 60
    compiledstring  go to state 61


State 16

   12 stmt: BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 72


State 17

   13 stmt: CONTINUE • SEMICOLON

    SEMICOLON  shift, and go to state 73


State 18

   35 term: NOT • expr

    INTCONST          shift, and go to state 6
    REALCONST         shift, and go to state 7
    STRINGCONST       shift, and go to state 8
    ID                shift, and go to state 9
    DOLLAR_IDENT      shift, and go to state 10
    NOT               shift, and go to state 18
    LOCAL             shift, and go to state 19
    TRUE              shift, and go to state 20
    FALSE             shift, and go to state 21
    NIL               shift, and go to state 22
    MINUS             shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    EXCLAMATION_MARK  shift, and go to state 26
    TILDA             shift, and go to state 27
    AT                shift, and go to state 28
    SHARP             shift, and go to state 29
    LEFT_BRACKET      shift, and go to state 31
    LEFT_PAREN        shift, and go to state 32
    LEFT_QUASI_QUOTE  shift, and go to state 33
    DOUBLE_COLON      shift, and go to state 35

    expr            go to state 74
    term            go to state 38
    assignexpr      go to state 39
    primary         go to state 40
    lvalue          go to state 41
    member          go to state 42
    call            go to state 43
    objectdef       go to state 44
    const           go to state 48
    quasiquotes     go to state 56
    escape          go to state 58
    inline          go to state 59
    unparsed        go to state 60
    compiledstring  go to state 61


State 19

   54 lvalue: LOCAL • ID

    ID  shift, and go to state 75


State 20

   97 const: TRUE •

    $default  reduce using rule 97 (const)


State 21

   98 const: FALSE •

    $default  reduce using rule 98 (const)


State 22

   96 const: NIL •

    $default  reduce using rule 96 (const)


State 23

   34 term: MINUS • expr

    INTCONST          shift, and go to state 6
    REALCONST         shift, and go to state 7
    STRINGCONST       shift, and go to state 8
    ID                shift, and go to state 9
    DOLLAR_IDENT      shift, and go to state 10
    NOT               shift, and go to state 18
    LOCAL             shift, and go to state 19
    TRUE              shift, and go to state 20
    FALSE             shift, and go to state 21
    NIL               shift, and go to state 22
    MINUS             shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    EXCLAMATION_MARK  shift, and go to state 26
    TILDA             shift, and go to state 27
    AT                shift, and go to state 28
    SHARP             shift, and go to state 29
    LEFT_BRACKET      shift, and go to state 31
    LEFT_PAREN        shift, and go to state 32
    LEFT_QUASI_QUOTE  shift, and go to state 33
    DOUBLE_COLON      shift, and go to state 35

    expr            go to state 76
    term            go to state 38
    assignexpr      go to state 39
    primary         go to state 40
    lvalue          go to state 41
    member          go to state 42
    call            go to state 43
    objectdef       go to state 44
    const           go to state 48
    quasiquotes     go to state 56
    escape          go to state 58
    inline          go to state 59
    unparsed        go to state 60
    compiledstring  go to state 61


State 24

   36 term: PLUS_PLUS • lvalue

    ID            shift, and go to state 9
    DOLLAR_IDENT  shift, and go to state 10
    LOCAL         shift, and go to state 19
    LEFT_PAREN    shift, and go to state 77
    DOUBLE_COLON  shift, and go to state 35

    lvalue  go to state 78
    member  go to state 42
    call    go to state 79


State 25

   38 term: MINUS_MINUS • lvalue

    ID            shift, and go to state 9
    DOLLAR_IDENT  shift, and go to state 10
    LOCAL         shift, and go to state 19
    LEFT_PAREN    shift, and go to state 77
    DOUBLE_COLON  shift, and go to state 35

    lvalue  go to state 80
    member  go to state 42
    call    go to state 79


State 26

  125 inline: EXCLAMATION_MARK • LEFT_PAREN expr RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 81


State 27

  123 escape: TILDA • ID
  124       | TILDA • LEFT_PAREN expr RIGHT_PAREN

    ID          shift, and go to state 82
    LEFT_PAREN  shift, and go to state 83


State 28

  127 compiledstring: AT • LEFT_PAREN expr RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 84


State 29

  126 unparsed: SHARP • LEFT_PAREN expr RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 85


State 30

   88 block: LEFT_BRACE • stmts RIGHT_BRACE

    $default  reduce using rule 6 (stmts)

    stmts  go to state 86


State 31

   80 objectdef: LEFT_BRACKET • objectdinner RIGHT_BRACKET

    LEFT_BRACE     reduce using rule 86 (commaindexed)
    RIGHT_BRACKET  reduce using rule 83 (objectdinner)
    $default       reduce using rule 77 (objcommalist)

    objelistnotempty  go to state 87
    objcommalist      go to state 88
    objectdinner      go to state 89
    indexed           go to state 90
    commaindexed      go to state 91


State 32

   33 term: LEFT_PAREN • expr RIGHT_PAREN
   50 primary: LEFT_PAREN • funcdef RIGHT_PAREN
   65 call: LEFT_PAREN • funcdef RIGHT_PAREN LEFT_PAREN elist RIGHT_PAREN

    INTCONST          shift, and go to state 6
    REALCONST         shift, and go to state 7
    STRINGCONST       shift, and go to state 8
    ID                shift, and go to state 9
    DOLLAR_IDENT      shift, and go to state 10
    FUNCTION          shift, and go to state 14
    NOT               shift, and go to state 18
    LOCAL             shift, and go to state 19
    TRUE              shift, and go to state 20
    FALSE             shift, and go to state 21
    NIL               shift, and go to state 22
    MINUS             shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    EXCLAMATION_MARK  shift, and go to state 26
    TILDA             shift, and go to state 27
    AT                shift, and go to state 28
    SHARP             shift, and go to state 29
    LEFT_BRACKET      shift, and go to state 31
    LEFT_PAREN        shift, and go to state 32
    LEFT_QUASI_QUOTE  shift, and go to state 33
    DOUBLE_COLON      shift, and go to state 35

    expr            go to state 92
    term            go to state 38
    assignexpr      go to state 39
    primary         go to state 40
    lvalue          go to state 41
    member          go to state 42
    call            go to state 43
    objectdef       go to state 44
    funcdef         go to state 93
    funcprefix      go to state 47
    const           go to state 48
    quasiquotes     go to state 56
    escape          go to state 58
    inline          go to state 59
    unparsed        go to state 60
    compiledstring  go to state 61


State 33

  116 quasiquotes: LEFT_QUASI_QUOTE • quotedrules RIGHT_QUASI_QUOTE

    error             shift, and go to state 5
    INTCONST          shift, and go to state 6
    REALCONST         shift, and go to state 7
    STRINGCONST       shift, and go to state 8
    ID                shift, and go to state 9
    DOLLAR_IDENT      shift, and go to state 10
    IF                shift, and go to state 11
    WHILE             shift, and go to state 12
    FOR               shift, and go to state 13
    FUNCTION          shift, and go to state 14
    RETURN            shift, and go to state 15
    BREAK             shift, and go to state 16
    CONTINUE          shift, and go to state 17
    NOT               shift, and go to state 18
    LOCAL             shift, and go to state 19
    TRUE              shift, and go to state 20
    FALSE             shift, and go to state 21
    NIL               shift, and go to state 22
    MINUS             shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    EXCLAMATION_MARK  shift, and go to state 26
    TILDA             shift, and go to state 27
    AT                shift, and go to state 28
    SHARP             shift, and go to state 29
    LEFT_BRACE        shift, and go to state 30
    LEFT_BRACKET      shift, and go to state 31
    LEFT_PAREN        shift, and go to state 32
    LEFT_QUASI_QUOTE  shift, and go to state 33
    SEMICOLON         shift, and go to state 34
    DOUBLE_COLON      shift, and go to state 35

    stmt            go to state 36
    expr            go to state 94
    term            go to state 38
    assignexpr      go to state 39
    primary         go to state 40
    lvalue          go to state 41
    member          go to state 42
    call            go to state 43
    objectdef       go to state 44
    block           go to state 45
    funcdef         go to state 46
    funcprefix      go to state 47
    const           go to state 48
    ifprefix        go to state 49
    ifstmt          go to state 50
    whilestart      go to state 51
    whilestmt       go to state 52
    forprefix       go to state 53
    forstmt         go to state 54
    returnstmt      go to state 55
    quasiquotes     go to state 56
    nonemptystmts   go to state 95
    objelistmulti   go to state 96
    quotedrules     go to state 97
    escape          go to state 58
    inline          go to state 59
    unparsed        go to state 60
    compiledstring  go to state 61


State 34

   16 stmt: SEMICOLON •

    $default  reduce using rule 16 (stmt)


State 35

   55 lvalue: DOUBLE_COLON • ID

    ID  shift, and go to state 98


State 36

  118 nonemptystmts: stmt •

    $default  reduce using rule 118 (nonemptystmts)


State 37

    3 bogusStart: PARSE_EXPR expr •
    7 stmt: expr • SEMICOLON
   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MULTIPLICATION expr
   22     | expr • DIVISION expr
   23     | expr • MODULO expr
   24     | expr • GREATER_THAN expr
   25     | expr • GREATER_OR_EQUAL expr
   26     | expr • LESS_THAN expr
   27     | expr • LESS_OR_EQUAL expr
   28     | expr • EQUAL expr
   29     | expr • NOT_EQUAL expr
   30     | expr • AND expr
   31     | expr • OR expr

    AND               shift, and go to state 99
    OR                shift, and go to state 100
    PLUS              shift, and go to state 101
    MINUS             shift, and go to state 102
    MULTIPLICATION    shift, and go to state 103
    DIVISION          shift, and go to state 104
    MODULO            shift, and go to state 105
    EQUAL             shift, and go to state 106
    NOT_EQUAL         shift, and go to state 107
    GREATER_THAN      shift, and go to state 108
    LESS_THAN         shift, and go to state 109
    GREATER_OR_EQUAL  shift, and go to state 110
    LESS_OR_EQUAL     shift, and go to state 111
    SEMICOLON         shift, and go to state 112

    $default  reduce using rule 3 (bogusStart)


State 38

   32 expr: term •

    $default  reduce using rule 32 (expr)


State 39

   18 expr: assignexpr •

    $default  reduce using rule 18 (expr)


State 40

   40 term: primary •

    $default  reduce using rule 40 (term)


State 41

   37 term: lvalue • PLUS_PLUS
   39     | lvalue • MINUS_MINUS
   41 assignexpr: lvalue • ASSIGNMENT expr
   47 primary: lvalue •
   57 member: lvalue • DOT ID
   58       | lvalue • DOT DOLLAR_IDENT
   59       | lvalue • LEFT_BRACKET expr RIGHT_BRACKET
   64 call: lvalue • callsuffix

    ASSIGNMENT    shift, and go to state 113
    PLUS_PLUS     shift, and go to state 114
    MINUS_MINUS   shift, and go to state 115
    LEFT_BRACKET  shift, and go to state 116
    LEFT_PAREN    shift, and go to state 117
    DOT           shift, and go to state 118
    DOT_DOT       shift, and go to state 119

    $default  reduce using rule 47 (primary)

    callsuffix  go to state 120
    normcall    go to state 121
    methodcall  go to state 122


State 42

   56 lvalue: member •

    $default  reduce using rule 56 (lvalue)


State 43

   48 primary: call •
   60 member: call • DOT ID
   61       | call • DOT DOLLAR_IDENT
   62       | call • LEFT_BRACKET expr RIGHT_BRACKET
   63 call: call • LEFT_PAREN elist RIGHT_PAREN

    LEFT_BRACKET  shift, and go to state 123
    LEFT_PAREN    shift, and go to state 124
    DOT           shift, and go to state 125

    $default  reduce using rule 48 (primary)


State 44

   49 primary: objectdef •

    $default  reduce using rule 49 (primary)


State 45

   14 stmt: block •

    $default  reduce using rule 14 (stmt)


State 46

   15 stmt: funcdef •

    $default  reduce using rule 15 (stmt)


State 47

   89 funcdef: funcprefix • LEFT_PAREN idlist RIGHT_PAREN block

    LEFT_PAREN  shift, and go to state 126


State 48

   51 primary: const •

    $default  reduce using rule 51 (primary)


State 49

  106 ifstmt: ifprefix • stmt
  107       | ifprefix • stmt elseprefix stmt

    error             shift, and go to state 5
    INTCONST          shift, and go to state 6
    REALCONST         shift, and go to state 7
    STRINGCONST       shift, and go to state 8
    ID                shift, and go to state 9
    DOLLAR_IDENT      shift, and go to state 10
    IF                shift, and go to state 11
    WHILE             shift, and go to state 12
    FOR               shift, and go to state 13
    FUNCTION          shift, and go to state 14
    RETURN            shift, and go to state 15
    BREAK             shift, and go to state 16
    CONTINUE          shift, and go to state 17
    NOT               shift, and go to state 18
    LOCAL             shift, and go to state 19
    TRUE              shift, and go to state 20
    FALSE             shift, and go to state 21
    NIL               shift, and go to state 22
    MINUS             shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    EXCLAMATION_MARK  shift, and go to state 26
    TILDA             shift, and go to state 27
    AT                shift, and go to state 28
    SHARP             shift, and go to state 29
    LEFT_BRACE        shift, and go to state 30
    LEFT_BRACKET      shift, and go to state 31
    LEFT_PAREN        shift, and go to state 32
    LEFT_QUASI_QUOTE  shift, and go to state 33
    SEMICOLON         shift, and go to state 34
    DOUBLE_COLON      shift, and go to state 35

    stmt            go to state 127
    expr            go to state 64
    term            go to state 38
    assignexpr      go to state 39
    primary         go to state 40
    lvalue          go to state 41
    member          go to state 42
    call            go to state 43
    objectdef       go to state 44
    block           go to state 45
    funcdef         go to state 46
    funcprefix      go to state 47
    const           go to state 48
    ifprefix        go to state 49
    ifstmt          go to state 50
    whilestart      go to state 51
    whilestmt       go to state 52
    forprefix       go to state 53
    forstmt         go to state 54
    returnstmt      go to state 55
    quasiquotes     go to state 56
    escape          go to state 58
    inline          go to state 59
    unparsed        go to state 60
    compiledstring  go to state 61


State 50

    8 stmt: ifstmt •

    $default  reduce using rule 8 (stmt)


State 51

  111 whilestmt: whilestart • whilecond stmt

    LEFT_PAREN  shift, and go to state 128

    whilecond  go to state 129


State 52

    9 stmt: whilestmt •

    $default  reduce using rule 9 (stmt)


State 53

  113 forstmt: forprefix • elist RIGHT_PAREN stmt

    RIGHT_PAREN  reduce using rule 71 (elist)
    $default     reduce using rule 75 (commalist)

    elist          go to state 130
    elistnotempty  go to state 131
    commalist      go to state 132


State 54

   10 stmt: forstmt •

    $default  reduce using rule 10 (stmt)


State 55

   11 stmt: returnstmt •

    $default  reduce using rule 11 (stmt)


State 56

   42 primary: quasiquotes •

    $default  reduce using rule 42 (primary)


State 57

    2 bogusStart: PARSE_EXPR nonemptystmts •
  117 nonemptystmts: nonemptystmts • stmt

    error             shift, and go to state 5
    INTCONST          shift, and go to state 6
    REALCONST         shift, and go to state 7
    STRINGCONST       shift, and go to state 8
    ID                shift, and go to state 9
    DOLLAR_IDENT      shift, and go to state 10
    IF                shift, and go to state 11
    WHILE             shift, and go to state 12
    FOR               shift, and go to state 13
    FUNCTION          shift, and go to state 14
    RETURN            shift, and go to state 15
    BREAK             shift, and go to state 16
    CONTINUE          shift, and go to state 17
    NOT               shift, and go to state 18
    LOCAL             shift, and go to state 19
    TRUE              shift, and go to state 20
    FALSE             shift, and go to state 21
    NIL               shift, and go to state 22
    MINUS             shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    EXCLAMATION_MARK  shift, and go to state 26
    TILDA             shift, and go to state 27
    AT                shift, and go to state 28
    SHARP             shift, and go to state 29
    LEFT_BRACE        shift, and go to state 30
    LEFT_BRACKET      shift, and go to state 31
    LEFT_PAREN        shift, and go to state 32
    LEFT_QUASI_QUOTE  shift, and go to state 33
    SEMICOLON         shift, and go to state 34
    DOUBLE_COLON      shift, and go to state 35

    $end  reduce using rule 2 (bogusStart)

    stmt            go to state 133
    expr            go to state 64
    term            go to state 38
    assignexpr      go to state 39
    primary         go to state 40
    lvalue          go to state 41
    member          go to state 42
    call            go to state 43
    objectdef       go to state 44
    block           go to state 45
    funcdef         go to state 46
    funcprefix      go to state 47
    const           go to state 48
    ifprefix        go to state 49
    ifstmt          go to state 50
    whilestart      go to state 51
    whilestmt       go to state 52
    forprefix       go to state 53
    forstmt         go to state 54
    returnstmt      go to state 55
    quasiquotes     go to state 56
    escape          go to state 58
    inline          go to state 59
    unparsed        go to state 60
    compiledstring  go to state 61


State 58

   43 primary: escape •

    $default  reduce using rule 43 (primary)


State 59

   44 primary: inline •

    $default  reduce using rule 44 (primary)


State 60

   45 primary: unparsed •

    $default  reduce using rule 45 (primary)


State 61

   46 primary: compiledstring •

    $default  reduce using rule 46 (primary)


State 62

    0 $accept: bogusStart $end •

    $default  accept


State 63

    5 stmts: stmts stmt •

    $default  reduce using rule 5 (stmts)


State 64

    7 stmt: expr • SEMICOLON
   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MULTIPLICATION expr
   22     | expr • DIVISION expr
   23     | expr • MODULO expr
   24     | expr • GREATER_THAN expr
   25     | expr • GREATER_OR_EQUAL expr
   26     | expr • LESS_THAN expr
   27     | expr • LESS_OR_EQUAL expr
   28     | expr • EQUAL expr
   29     | expr • NOT_EQUAL expr
   30     | expr • AND expr
   31     | expr • OR expr

    AND               shift, and go to state 99
    OR                shift, and go to state 100
    PLUS              shift, and go to state 101
    MINUS             shift, and go to state 102
    MULTIPLICATION    shift, and go to state 103
    DIVISION          shift, and go to state 104
    MODULO            shift, and go to state 105
    EQUAL             shift, and go to state 106
    NOT_EQUAL         shift, and go to state 107
    GREATER_THAN      shift, and go to state 108
    LESS_THAN         shift, and go to state 109
    GREATER_OR_EQUAL  shift, and go to state 110
    LESS_OR_EQUAL     shift, and go to state 111
    SEMICOLON         shift, and go to state 112


State 65

   17 stmt: error SEMICOLON •

    $default  reduce using rule 17 (stmt)


State 66

  105 ifprefix: IF LEFT_PAREN • expr RIGHT_PAREN

    INTCONST          shift, and go to state 6
    REALCONST         shift, and go to state 7
    STRINGCONST       shift, and go to state 8
    ID                shift, and go to state 9
    DOLLAR_IDENT      shift, and go to state 10
    NOT               shift, and go to state 18
    LOCAL             shift, and go to state 19
    TRUE              shift, and go to state 20
    FALSE             shift, and go to state 21
    NIL               shift, and go to state 22
    MINUS             shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    EXCLAMATION_MARK  shift, and go to state 26
    TILDA             shift, and go to state 27
    AT                shift, and go to state 28
    SHARP             shift, and go to state 29
    LEFT_BRACKET      shift, and go to state 31
    LEFT_PAREN        shift, and go to state 32
    LEFT_QUASI_QUOTE  shift, and go to state 33
    DOUBLE_COLON      shift, and go to state 35

    expr            go to state 134
    term            go to state 38
    assignexpr      go to state 39
    primary         go to state 40
    lvalue          go to state 41
    member          go to state 42
    call            go to state 43
    objectdef       go to state 44
    const           go to state 48
    quasiquotes     go to state 56
    escape          go to state 58
    inline          go to state 59
    unparsed        go to state 60
    compiledstring  go to state 61


State 67

  112 forprefix: FOR LEFT_PAREN • elist SEMICOLON expr SEMICOLON

    SEMICOLON  reduce using rule 71 (elist)
    $default   reduce using rule 75 (commalist)

    elist          go to state 135
    elistnotempty  go to state 131
    commalist      go to state 132


State 68

   91 funcname: ID •

    $default  reduce using rule 91 (funcname)


State 69

   90 funcprefix: FUNCTION funcname •

    $default  reduce using rule 90 (funcprefix)


State 70

  115 returnstmt: RETURN SEMICOLON •

    $default  reduce using rule 115 (returnstmt)


State 71

   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MULTIPLICATION expr
   22     | expr • DIVISION expr
   23     | expr • MODULO expr
   24     | expr • GREATER_THAN expr
   25     | expr • GREATER_OR_EQUAL expr
   26     | expr • LESS_THAN expr
   27     | expr • LESS_OR_EQUAL expr
   28     | expr • EQUAL expr
   29     | expr • NOT_EQUAL expr
   30     | expr • AND expr
   31     | expr • OR expr
  114 returnstmt: RETURN expr • SEMICOLON

    AND               shift, and go to state 99
    OR                shift, and go to state 100
    PLUS              shift, and go to state 101
    MINUS             shift, and go to state 102
    MULTIPLICATION    shift, and go to state 103
    DIVISION          shift, and go to state 104
    MODULO            shift, and go to state 105
    EQUAL             shift, and go to state 106
    NOT_EQUAL         shift, and go to state 107
    GREATER_THAN      shift, and go to state 108
    LESS_THAN         shift, and go to state 109
    GREATER_OR_EQUAL  shift, and go to state 110
    LESS_OR_EQUAL     shift, and go to state 111
    SEMICOLON         shift, and go to state 136


State 72

   12 stmt: BREAK SEMICOLON •

    $default  reduce using rule 12 (stmt)


State 73

   13 stmt: CONTINUE SEMICOLON •

    $default  reduce using rule 13 (stmt)


State 74

   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MULTIPLICATION expr
   22     | expr • DIVISION expr
   23     | expr • MODULO expr
   24     | expr • GREATER_THAN expr
   25     | expr • GREATER_OR_EQUAL expr
   26     | expr • LESS_THAN expr
   27     | expr • LESS_OR_EQUAL expr
   28     | expr • EQUAL expr
   29     | expr • NOT_EQUAL expr
   30     | expr • AND expr
   31     | expr • OR expr
   35 term: NOT expr •

    $default  reduce using rule 35 (term)


State 75

   54 lvalue: LOCAL ID •

    $default  reduce using rule 54 (lvalue)


State 76

   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MULTIPLICATION expr
   22     | expr • DIVISION expr
   23     | expr • MODULO expr
   24     | expr • GREATER_THAN expr
   25     | expr • GREATER_OR_EQUAL expr
   26     | expr • LESS_THAN expr
   27     | expr • LESS_OR_EQUAL expr
   28     | expr • EQUAL expr
   29     | expr • NOT_EQUAL expr
   30     | expr • AND expr
   31     | expr • OR expr
   34 term: MINUS expr •

    $default  reduce using rule 34 (term)


State 77

   65 call: LEFT_PAREN • funcdef RIGHT_PAREN LEFT_PAREN elist RIGHT_PAREN

    FUNCTION  shift, and go to state 14

    funcdef     go to state 137
    funcprefix  go to state 47


State 78

   36 term: PLUS_PLUS lvalue •
   57 member: lvalue • DOT ID
   58       | lvalue • DOT DOLLAR_IDENT
   59       | lvalue • LEFT_BRACKET expr RIGHT_BRACKET
   64 call: lvalue • callsuffix

    LEFT_BRACKET  shift, and go to state 116
    LEFT_PAREN    shift, and go to state 117
    DOT           shift, and go to state 118
    DOT_DOT       shift, and go to state 119

    $default  reduce using rule 36 (term)

    callsuffix  go to state 120
    normcall    go to state 121
    methodcall  go to state 122


State 79

   60 member: call • DOT ID
   61       | call • DOT DOLLAR_IDENT
   62       | call • LEFT_BRACKET expr RIGHT_BRACKET
   63 call: call • LEFT_PAREN elist RIGHT_PAREN

    LEFT_BRACKET  shift, and go to state 123
    LEFT_PAREN    shift, and go to state 124
    DOT           shift, and go to state 125


State 80

   38 term: MINUS_MINUS lvalue •
   57 member: lvalue • DOT ID
   58       | lvalue • DOT DOLLAR_IDENT
   59       | lvalue • LEFT_BRACKET expr RIGHT_BRACKET
   64 call: lvalue • callsuffix

    LEFT_BRACKET  shift, and go to state 116
    LEFT_PAREN    shift, and go to state 117
    DOT           shift, and go to state 118
    DOT_DOT       shift, and go to state 119

    $default  reduce using rule 38 (term)

    callsuffix  go to state 120
    normcall    go to state 121
    methodcall  go to state 122


State 81

  125 inline: EXCLAMATION_MARK LEFT_PAREN • expr RIGHT_PAREN

    INTCONST          shift, and go to state 6
    REALCONST         shift, and go to state 7
    STRINGCONST       shift, and go to state 8
    ID                shift, and go to state 9
    DOLLAR_IDENT      shift, and go to state 10
    NOT               shift, and go to state 18
    LOCAL             shift, and go to state 19
    TRUE              shift, and go to state 20
    FALSE             shift, and go to state 21
    NIL               shift, and go to state 22
    MINUS             shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    EXCLAMATION_MARK  shift, and go to state 26
    TILDA             shift, and go to state 27
    AT                shift, and go to state 28
    SHARP             shift, and go to state 29
    LEFT_BRACKET      shift, and go to state 31
    LEFT_PAREN        shift, and go to state 32
    LEFT_QUASI_QUOTE  shift, and go to state 33
    DOUBLE_COLON      shift, and go to state 35

    expr            go to state 138
    term            go to state 38
    assignexpr      go to state 39
    primary         go to state 40
    lvalue          go to state 41
    member          go to state 42
    call            go to state 43
    objectdef       go to state 44
    const           go to state 48
    quasiquotes     go to state 56
    escape          go to state 58
    inline          go to state 59
    unparsed        go to state 60
    compiledstring  go to state 61


State 82

  123 escape: TILDA ID •

    $default  reduce using rule 123 (escape)


State 83

  124 escape: TILDA LEFT_PAREN • expr RIGHT_PAREN

    INTCONST          shift, and go to state 6
    REALCONST         shift, and go to state 7
    STRINGCONST       shift, and go to state 8
    ID                shift, and go to state 9
    DOLLAR_IDENT      shift, and go to state 10
    NOT               shift, and go to state 18
    LOCAL             shift, and go to state 19
    TRUE              shift, and go to state 20
    FALSE             shift, and go to state 21
    NIL               shift, and go to state 22
    MINUS             shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    EXCLAMATION_MARK  shift, and go to state 26
    TILDA             shift, and go to state 27
    AT                shift, and go to state 28
    SHARP             shift, and go to state 29
    LEFT_BRACKET      shift, and go to state 31
    LEFT_PAREN        shift, and go to state 32
    LEFT_QUASI_QUOTE  shift, and go to state 33
    DOUBLE_COLON      shift, and go to state 35

    expr            go to state 139
    term            go to state 38
    assignexpr      go to state 39
    primary         go to state 40
    lvalue          go to state 41
    member          go to state 42
    call            go to state 43
    objectdef       go to state 44
    const           go to state 48
    quasiquotes     go to state 56
    escape          go to state 58
    inline          go to state 59
    unparsed        go to state 60
    compiledstring  go to state 61


State 84

  127 compiledstring: AT LEFT_PAREN • expr RIGHT_PAREN

    INTCONST          shift, and go to state 6
    REALCONST         shift, and go to state 7
    STRINGCONST       shift, and go to state 8
    ID                shift, and go to state 9
    DOLLAR_IDENT      shift, and go to state 10
    NOT               shift, and go to state 18
    LOCAL             shift, and go to state 19
    TRUE              shift, and go to state 20
    FALSE             shift, and go to state 21
    NIL               shift, and go to state 22
    MINUS             shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    EXCLAMATION_MARK  shift, and go to state 26
    TILDA             shift, and go to state 27
    AT                shift, and go to state 28
    SHARP             shift, and go to state 29
    LEFT_BRACKET      shift, and go to state 31
    LEFT_PAREN        shift, and go to state 32
    LEFT_QUASI_QUOTE  shift, and go to state 33
    DOUBLE_COLON      shift, and go to state 35

    expr            go to state 140
    term            go to state 38
    assignexpr      go to state 39
    primary         go to state 40
    lvalue          go to state 41
    member          go to state 42
    call            go to state 43
    objectdef       go to state 44
    const           go to state 48
    quasiquotes     go to state 56
    escape          go to state 58
    inline          go to state 59
    unparsed        go to state 60
    compiledstring  go to state 61


State 85

  126 unparsed: SHARP LEFT_PAREN • expr RIGHT_PAREN

    INTCONST          shift, and go to state 6
    REALCONST         shift, and go to state 7
    STRINGCONST       shift, and go to state 8
    ID                shift, and go to state 9
    DOLLAR_IDENT      shift, and go to state 10
    NOT               shift, and go to state 18
    LOCAL             shift, and go to state 19
    TRUE              shift, and go to state 20
    FALSE             shift, and go to state 21
    NIL               shift, and go to state 22
    MINUS             shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    EXCLAMATION_MARK  shift, and go to state 26
    TILDA             shift, and go to state 27
    AT                shift, and go to state 28
    SHARP             shift, and go to state 29
    LEFT_BRACKET      shift, and go to state 31
    LEFT_PAREN        shift, and go to state 32
    LEFT_QUASI_QUOTE  shift, and go to state 33
    DOUBLE_COLON      shift, and go to state 35

    expr            go to state 141
    term            go to state 38
    assignexpr      go to state 39
    primary         go to state 40
    lvalue          go to state 41
    member          go to state 42
    call            go to state 43
    objectdef       go to state 44
    const           go to state 48
    quasiquotes     go to state 56
    escape          go to state 58
    inline          go to state 59
    unparsed        go to state 60
    compiledstring  go to state 61


State 86

    5 stmts: stmts • stmt
   88 block: LEFT_BRACE stmts • RIGHT_BRACE

    error             shift, and go to state 5
    INTCONST          shift, and go to state 6
    REALCONST         shift, and go to state 7
    STRINGCONST       shift, and go to state 8
    ID                shift, and go to state 9
    DOLLAR_IDENT      shift, and go to state 10
    IF                shift, and go to state 11
    WHILE             shift, and go to state 12
    FOR               shift, and go to state 13
    FUNCTION          shift, and go to state 14
    RETURN            shift, and go to state 15
    BREAK             shift, and go to state 16
    CONTINUE          shift, and go to state 17
    NOT               shift, and go to state 18
    LOCAL             shift, and go to state 19
    TRUE              shift, and go to state 20
    FALSE             shift, and go to state 21
    NIL               shift, and go to state 22
    MINUS             shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    EXCLAMATION_MARK  shift, and go to state 26
    TILDA             shift, and go to state 27
    AT                shift, and go to state 28
    SHARP             shift, and go to state 29
    LEFT_BRACE        shift, and go to state 30
    RIGHT_BRACE       shift, and go to state 142
    LEFT_BRACKET      shift, and go to state 31
    LEFT_PAREN        shift, and go to state 32
    LEFT_QUASI_QUOTE  shift, and go to state 33
    SEMICOLON         shift, and go to state 34
    DOUBLE_COLON      shift, and go to state 35

    stmt            go to state 63
    expr            go to state 64
    term            go to state 38
    assignexpr      go to state 39
    primary         go to state 40
    lvalue          go to state 41
    member          go to state 42
    call            go to state 43
    objectdef       go to state 44
    block           go to state 45
    funcdef         go to state 46
    funcprefix      go to state 47
    const           go to state 48
    ifprefix        go to state 49
    ifstmt          go to state 50
    whilestart      go to state 51
    whilestmt       go to state 52
    forprefix       go to state 53
    forstmt         go to state 54
    returnstmt      go to state 55
    quasiquotes     go to state 56
    escape          go to state 58
    inline          go to state 59
    unparsed        go to state 60
    compiledstring  go to state 61


State 87

   81 objectdinner: objelistnotempty •

    $default  reduce using rule 81 (objectdinner)


State 88

   73 objelistnotempty: objcommalist • expr
   76 objcommalist: objcommalist • expr COMMA

    INTCONST          shift, and go to state 6
    REALCONST         shift, and go to state 7
    STRINGCONST       shift, and go to state 8
    ID                shift, and go to state 9
    DOLLAR_IDENT      shift, and go to state 10
    NOT               shift, and go to state 18
    LOCAL             shift, and go to state 19
    TRUE              shift, and go to state 20
    FALSE             shift, and go to state 21
    NIL               shift, and go to state 22
    MINUS             shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    EXCLAMATION_MARK  shift, and go to state 26
    TILDA             shift, and go to state 27
    AT                shift, and go to state 28
    SHARP             shift, and go to state 29
    LEFT_BRACKET      shift, and go to state 31
    LEFT_PAREN        shift, and go to state 32
    LEFT_QUASI_QUOTE  shift, and go to state 33
    DOUBLE_COLON      shift, and go to state 35

    expr            go to state 143
    term            go to state 38
    assignexpr      go to state 39
    primary         go to state 40
    lvalue          go to state 41
    member          go to state 42
    call            go to state 43
    objectdef       go to state 44
    const           go to state 48
    quasiquotes     go to state 56
    escape          go to state 58
    inline          go to state 59
    unparsed        go to state 60
    compiledstring  go to state 61


State 89

   80 objectdef: LEFT_BRACKET objectdinner • RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 144


State 90

   82 objectdinner: indexed •

    $default  reduce using rule 82 (objectdinner)


State 91

   84 indexed: commaindexed • indexedelem
   85 commaindexed: commaindexed • indexedelem COMMA

    LEFT_BRACE  shift, and go to state 145

    indexedelem  go to state 146


State 92

   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MULTIPLICATION expr
   22     | expr • DIVISION expr
   23     | expr • MODULO expr
   24     | expr • GREATER_THAN expr
   25     | expr • GREATER_OR_EQUAL expr
   26     | expr • LESS_THAN expr
   27     | expr • LESS_OR_EQUAL expr
   28     | expr • EQUAL expr
   29     | expr • NOT_EQUAL expr
   30     | expr • AND expr
   31     | expr • OR expr
   33 term: LEFT_PAREN expr • RIGHT_PAREN

    AND               shift, and go to state 99
    OR                shift, and go to state 100
    PLUS              shift, and go to state 101
    MINUS             shift, and go to state 102
    MULTIPLICATION    shift, and go to state 103
    DIVISION          shift, and go to state 104
    MODULO            shift, and go to state 105
    EQUAL             shift, and go to state 106
    NOT_EQUAL         shift, and go to state 107
    GREATER_THAN      shift, and go to state 108
    LESS_THAN         shift, and go to state 109
    GREATER_OR_EQUAL  shift, and go to state 110
    LESS_OR_EQUAL     shift, and go to state 111
    RIGHT_PAREN       shift, and go to state 147


State 93

   50 primary: LEFT_PAREN funcdef • RIGHT_PAREN
   65 call: LEFT_PAREN funcdef • RIGHT_PAREN LEFT_PAREN elist RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 148


State 94

    7 stmt: expr • SEMICOLON
   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MULTIPLICATION expr
   22     | expr • DIVISION expr
   23     | expr • MODULO expr
   24     | expr • GREATER_THAN expr
   25     | expr • GREATER_OR_EQUAL expr
   26     | expr • LESS_THAN expr
   27     | expr • LESS_OR_EQUAL expr
   28     | expr • EQUAL expr
   29     | expr • NOT_EQUAL expr
   30     | expr • AND expr
   31     | expr • OR expr
  120 objelistmulti: expr •

    AND               shift, and go to state 99
    OR                shift, and go to state 100
    PLUS              shift, and go to state 101
    MINUS             shift, and go to state 102
    MULTIPLICATION    shift, and go to state 103
    DIVISION          shift, and go to state 104
    MODULO            shift, and go to state 105
    EQUAL             shift, and go to state 106
    NOT_EQUAL         shift, and go to state 107
    GREATER_THAN      shift, and go to state 108
    LESS_THAN         shift, and go to state 109
    GREATER_OR_EQUAL  shift, and go to state 110
    LESS_OR_EQUAL     shift, and go to state 111
    SEMICOLON         shift, and go to state 112

    $default  reduce using rule 120 (objelistmulti)


State 95

  117 nonemptystmts: nonemptystmts • stmt
  121 quotedrules: nonemptystmts •

    error             shift, and go to state 5
    INTCONST          shift, and go to state 6
    REALCONST         shift, and go to state 7
    STRINGCONST       shift, and go to state 8
    ID                shift, and go to state 9
    DOLLAR_IDENT      shift, and go to state 10
    IF                shift, and go to state 11
    WHILE             shift, and go to state 12
    FOR               shift, and go to state 13
    FUNCTION          shift, and go to state 14
    RETURN            shift, and go to state 15
    BREAK             shift, and go to state 16
    CONTINUE          shift, and go to state 17
    NOT               shift, and go to state 18
    LOCAL             shift, and go to state 19
    TRUE              shift, and go to state 20
    FALSE             shift, and go to state 21
    NIL               shift, and go to state 22
    MINUS             shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    EXCLAMATION_MARK  shift, and go to state 26
    TILDA             shift, and go to state 27
    AT                shift, and go to state 28
    SHARP             shift, and go to state 29
    LEFT_BRACE        shift, and go to state 30
    LEFT_BRACKET      shift, and go to state 31
    LEFT_PAREN        shift, and go to state 32
    LEFT_QUASI_QUOTE  shift, and go to state 33
    SEMICOLON         shift, and go to state 34
    DOUBLE_COLON      shift, and go to state 35

    RIGHT_QUASI_QUOTE  reduce using rule 121 (quotedrules)

    stmt            go to state 133
    expr            go to state 64
    term            go to state 38
    assignexpr      go to state 39
    primary         go to state 40
    lvalue          go to state 41
    member          go to state 42
    call            go to state 43
    objectdef       go to state 44
    block           go to state 45
    funcdef         go to state 46
    funcprefix      go to state 47
    const           go to state 48
    ifprefix        go to state 49
    ifstmt          go to state 50
    whilestart      go to state 51
    whilestmt       go to state 52
    forprefix       go to state 53
    forstmt         go to state 54
    returnstmt      go to state 55
    quasiquotes     go to state 56
    escape          go to state 58
    inline          go to state 59
    unparsed        go to state 60
    compiledstring  go to state 61


State 96

  119 objelistmulti: objelistmulti • COMMA expr
  122 quotedrules: objelistmulti •

    COMMA  shift, and go to state 149

    $default  reduce using rule 122 (quotedrules)


State 97

  116 quasiquotes: LEFT_QUASI_QUOTE quotedrules • RIGHT_QUASI_QUOTE

    RIGHT_QUASI_QUOTE  shift, and go to state 150


State 98

   55 lvalue: DOUBLE_COLON ID •

    $default  reduce using rule 55 (lvalue)


State 99

   30 expr: expr AND • expr

    INTCONST          shift, and go to state 6
    REALCONST         shift, and go to state 7
    STRINGCONST       shift, and go to state 8
    ID                shift, and go to state 9
    DOLLAR_IDENT      shift, and go to state 10
    NOT               shift, and go to state 18
    LOCAL             shift, and go to state 19
    TRUE              shift, and go to state 20
    FALSE             shift, and go to state 21
    NIL               shift, and go to state 22
    MINUS             shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    EXCLAMATION_MARK  shift, and go to state 26
    TILDA             shift, and go to state 27
    AT                shift, and go to state 28
    SHARP             shift, and go to state 29
    LEFT_BRACKET      shift, and go to state 31
    LEFT_PAREN        shift, and go to state 32
    LEFT_QUASI_QUOTE  shift, and go to state 33
    DOUBLE_COLON      shift, and go to state 35

    expr            go to state 151
    term            go to state 38
    assignexpr      go to state 39
    primary         go to state 40
    lvalue          go to state 41
    member          go to state 42
    call            go to state 43
    objectdef       go to state 44
    const           go to state 48
    quasiquotes     go to state 56
    escape          go to state 58
    inline          go to state 59
    unparsed        go to state 60
    compiledstring  go to state 61


State 100

   31 expr: expr OR • expr

    INTCONST          shift, and go to state 6
    REALCONST         shift, and go to state 7
    STRINGCONST       shift, and go to state 8
    ID                shift, and go to state 9
    DOLLAR_IDENT      shift, and go to state 10
    NOT               shift, and go to state 18
    LOCAL             shift, and go to state 19
    TRUE              shift, and go to state 20
    FALSE             shift, and go to state 21
    NIL               shift, and go to state 22
    MINUS             shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    EXCLAMATION_MARK  shift, and go to state 26
    TILDA             shift, and go to state 27
    AT                shift, and go to state 28
    SHARP             shift, and go to state 29
    LEFT_BRACKET      shift, and go to state 31
    LEFT_PAREN        shift, and go to state 32
    LEFT_QUASI_QUOTE  shift, and go to state 33
    DOUBLE_COLON      shift, and go to state 35

    expr            go to state 152
    term            go to state 38
    assignexpr      go to state 39
    primary         go to state 40
    lvalue          go to state 41
    member          go to state 42
    call            go to state 43
    objectdef       go to state 44
    const           go to state 48
    quasiquotes     go to state 56
    escape          go to state 58
    inline          go to state 59
    unparsed        go to state 60
    compiledstring  go to state 61


State 101

   19 expr: expr PLUS • expr

    INTCONST          shift, and go to state 6
    REALCONST         shift, and go to state 7
    STRINGCONST       shift, and go to state 8
    ID                shift, and go to state 9
    DOLLAR_IDENT      shift, and go to state 10
    NOT               shift, and go to state 18
    LOCAL             shift, and go to state 19
    TRUE              shift, and go to state 20
    FALSE             shift, and go to state 21
    NIL               shift, and go to state 22
    MINUS             shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    EXCLAMATION_MARK  shift, and go to state 26
    TILDA             shift, and go to state 27
    AT                shift, and go to state 28
    SHARP             shift, and go to state 29
    LEFT_BRACKET      shift, and go to state 31
    LEFT_PAREN        shift, and go to state 32
    LEFT_QUASI_QUOTE  shift, and go to state 33
    DOUBLE_COLON      shift, and go to state 35

    expr            go to state 153
    term            go to state 38
    assignexpr      go to state 39
    primary         go to state 40
    lvalue          go to state 41
    member          go to state 42
    call            go to state 43
    objectdef       go to state 44
    const           go to state 48
    quasiquotes     go to state 56
    escape          go to state 58
    inline          go to state 59
    unparsed        go to state 60
    compiledstring  go to state 61


State 102

   20 expr: expr MINUS • expr

    INTCONST          shift, and go to state 6
    REALCONST         shift, and go to state 7
    STRINGCONST       shift, and go to state 8
    ID                shift, and go to state 9
    DOLLAR_IDENT      shift, and go to state 10
    NOT               shift, and go to state 18
    LOCAL             shift, and go to state 19
    TRUE              shift, and go to state 20
    FALSE             shift, and go to state 21
    NIL               shift, and go to state 22
    MINUS             shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    EXCLAMATION_MARK  shift, and go to state 26
    TILDA             shift, and go to state 27
    AT                shift, and go to state 28
    SHARP             shift, and go to state 29
    LEFT_BRACKET      shift, and go to state 31
    LEFT_PAREN        shift, and go to state 32
    LEFT_QUASI_QUOTE  shift, and go to state 33
    DOUBLE_COLON      shift, and go to state 35

    expr            go to state 154
    term            go to state 38
    assignexpr      go to state 39
    primary         go to state 40
    lvalue          go to state 41
    member          go to state 42
    call            go to state 43
    objectdef       go to state 44
    const           go to state 48
    quasiquotes     go to state 56
    escape          go to state 58
    inline          go to state 59
    unparsed        go to state 60
    compiledstring  go to state 61


State 103

   21 expr: expr MULTIPLICATION • expr

    INTCONST          shift, and go to state 6
    REALCONST         shift, and go to state 7
    STRINGCONST       shift, and go to state 8
    ID                shift, and go to state 9
    DOLLAR_IDENT      shift, and go to state 10
    NOT               shift, and go to state 18
    LOCAL             shift, and go to state 19
    TRUE              shift, and go to state 20
    FALSE             shift, and go to state 21
    NIL               shift, and go to state 22
    MINUS             shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    EXCLAMATION_MARK  shift, and go to state 26
    TILDA             shift, and go to state 27
    AT                shift, and go to state 28
    SHARP             shift, and go to state 29
    LEFT_BRACKET      shift, and go to state 31
    LEFT_PAREN        shift, and go to state 32
    LEFT_QUASI_QUOTE  shift, and go to state 33
    DOUBLE_COLON      shift, and go to state 35

    expr            go to state 155
    term            go to state 38
    assignexpr      go to state 39
    primary         go to state 40
    lvalue          go to state 41
    member          go to state 42
    call            go to state 43
    objectdef       go to state 44
    const           go to state 48
    quasiquotes     go to state 56
    escape          go to state 58
    inline          go to state 59
    unparsed        go to state 60
    compiledstring  go to state 61


State 104

   22 expr: expr DIVISION • expr

    INTCONST          shift, and go to state 6
    REALCONST         shift, and go to state 7
    STRINGCONST       shift, and go to state 8
    ID                shift, and go to state 9
    DOLLAR_IDENT      shift, and go to state 10
    NOT               shift, and go to state 18
    LOCAL             shift, and go to state 19
    TRUE              shift, and go to state 20
    FALSE             shift, and go to state 21
    NIL               shift, and go to state 22
    MINUS             shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    EXCLAMATION_MARK  shift, and go to state 26
    TILDA             shift, and go to state 27
    AT                shift, and go to state 28
    SHARP             shift, and go to state 29
    LEFT_BRACKET      shift, and go to state 31
    LEFT_PAREN        shift, and go to state 32
    LEFT_QUASI_QUOTE  shift, and go to state 33
    DOUBLE_COLON      shift, and go to state 35

    expr            go to state 156
    term            go to state 38
    assignexpr      go to state 39
    primary         go to state 40
    lvalue          go to state 41
    member          go to state 42
    call            go to state 43
    objectdef       go to state 44
    const           go to state 48
    quasiquotes     go to state 56
    escape          go to state 58
    inline          go to state 59
    unparsed        go to state 60
    compiledstring  go to state 61


State 105

   23 expr: expr MODULO • expr

    INTCONST          shift, and go to state 6
    REALCONST         shift, and go to state 7
    STRINGCONST       shift, and go to state 8
    ID                shift, and go to state 9
    DOLLAR_IDENT      shift, and go to state 10
    NOT               shift, and go to state 18
    LOCAL             shift, and go to state 19
    TRUE              shift, and go to state 20
    FALSE             shift, and go to state 21
    NIL               shift, and go to state 22
    MINUS             shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    EXCLAMATION_MARK  shift, and go to state 26
    TILDA             shift, and go to state 27
    AT                shift, and go to state 28
    SHARP             shift, and go to state 29
    LEFT_BRACKET      shift, and go to state 31
    LEFT_PAREN        shift, and go to state 32
    LEFT_QUASI_QUOTE  shift, and go to state 33
    DOUBLE_COLON      shift, and go to state 35

    expr            go to state 157
    term            go to state 38
    assignexpr      go to state 39
    primary         go to state 40
    lvalue          go to state 41
    member          go to state 42
    call            go to state 43
    objectdef       go to state 44
    const           go to state 48
    quasiquotes     go to state 56
    escape          go to state 58
    inline          go to state 59
    unparsed        go to state 60
    compiledstring  go to state 61


State 106

   28 expr: expr EQUAL • expr

    INTCONST          shift, and go to state 6
    REALCONST         shift, and go to state 7
    STRINGCONST       shift, and go to state 8
    ID                shift, and go to state 9
    DOLLAR_IDENT      shift, and go to state 10
    NOT               shift, and go to state 18
    LOCAL             shift, and go to state 19
    TRUE              shift, and go to state 20
    FALSE             shift, and go to state 21
    NIL               shift, and go to state 22
    MINUS             shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    EXCLAMATION_MARK  shift, and go to state 26
    TILDA             shift, and go to state 27
    AT                shift, and go to state 28
    SHARP             shift, and go to state 29
    LEFT_BRACKET      shift, and go to state 31
    LEFT_PAREN        shift, and go to state 32
    LEFT_QUASI_QUOTE  shift, and go to state 33
    DOUBLE_COLON      shift, and go to state 35

    expr            go to state 158
    term            go to state 38
    assignexpr      go to state 39
    primary         go to state 40
    lvalue          go to state 41
    member          go to state 42
    call            go to state 43
    objectdef       go to state 44
    const           go to state 48
    quasiquotes     go to state 56
    escape          go to state 58
    inline          go to state 59
    unparsed        go to state 60
    compiledstring  go to state 61


State 107

   29 expr: expr NOT_EQUAL • expr

    INTCONST          shift, and go to state 6
    REALCONST         shift, and go to state 7
    STRINGCONST       shift, and go to state 8
    ID                shift, and go to state 9
    DOLLAR_IDENT      shift, and go to state 10
    NOT               shift, and go to state 18
    LOCAL             shift, and go to state 19
    TRUE              shift, and go to state 20
    FALSE             shift, and go to state 21
    NIL               shift, and go to state 22
    MINUS             shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    EXCLAMATION_MARK  shift, and go to state 26
    TILDA             shift, and go to state 27
    AT                shift, and go to state 28
    SHARP             shift, and go to state 29
    LEFT_BRACKET      shift, and go to state 31
    LEFT_PAREN        shift, and go to state 32
    LEFT_QUASI_QUOTE  shift, and go to state 33
    DOUBLE_COLON      shift, and go to state 35

    expr            go to state 159
    term            go to state 38
    assignexpr      go to state 39
    primary         go to state 40
    lvalue          go to state 41
    member          go to state 42
    call            go to state 43
    objectdef       go to state 44
    const           go to state 48
    quasiquotes     go to state 56
    escape          go to state 58
    inline          go to state 59
    unparsed        go to state 60
    compiledstring  go to state 61


State 108

   24 expr: expr GREATER_THAN • expr

    INTCONST          shift, and go to state 6
    REALCONST         shift, and go to state 7
    STRINGCONST       shift, and go to state 8
    ID                shift, and go to state 9
    DOLLAR_IDENT      shift, and go to state 10
    NOT               shift, and go to state 18
    LOCAL             shift, and go to state 19
    TRUE              shift, and go to state 20
    FALSE             shift, and go to state 21
    NIL               shift, and go to state 22
    MINUS             shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    EXCLAMATION_MARK  shift, and go to state 26
    TILDA             shift, and go to state 27
    AT                shift, and go to state 28
    SHARP             shift, and go to state 29
    LEFT_BRACKET      shift, and go to state 31
    LEFT_PAREN        shift, and go to state 32
    LEFT_QUASI_QUOTE  shift, and go to state 33
    DOUBLE_COLON      shift, and go to state 35

    expr            go to state 160
    term            go to state 38
    assignexpr      go to state 39
    primary         go to state 40
    lvalue          go to state 41
    member          go to state 42
    call            go to state 43
    objectdef       go to state 44
    const           go to state 48
    quasiquotes     go to state 56
    escape          go to state 58
    inline          go to state 59
    unparsed        go to state 60
    compiledstring  go to state 61


State 109

   26 expr: expr LESS_THAN • expr

    INTCONST          shift, and go to state 6
    REALCONST         shift, and go to state 7
    STRINGCONST       shift, and go to state 8
    ID                shift, and go to state 9
    DOLLAR_IDENT      shift, and go to state 10
    NOT               shift, and go to state 18
    LOCAL             shift, and go to state 19
    TRUE              shift, and go to state 20
    FALSE             shift, and go to state 21
    NIL               shift, and go to state 22
    MINUS             shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    EXCLAMATION_MARK  shift, and go to state 26
    TILDA             shift, and go to state 27
    AT                shift, and go to state 28
    SHARP             shift, and go to state 29
    LEFT_BRACKET      shift, and go to state 31
    LEFT_PAREN        shift, and go to state 32
    LEFT_QUASI_QUOTE  shift, and go to state 33
    DOUBLE_COLON      shift, and go to state 35

    expr            go to state 161
    term            go to state 38
    assignexpr      go to state 39
    primary         go to state 40
    lvalue          go to state 41
    member          go to state 42
    call            go to state 43
    objectdef       go to state 44
    const           go to state 48
    quasiquotes     go to state 56
    escape          go to state 58
    inline          go to state 59
    unparsed        go to state 60
    compiledstring  go to state 61


State 110

   25 expr: expr GREATER_OR_EQUAL • expr

    INTCONST          shift, and go to state 6
    REALCONST         shift, and go to state 7
    STRINGCONST       shift, and go to state 8
    ID                shift, and go to state 9
    DOLLAR_IDENT      shift, and go to state 10
    NOT               shift, and go to state 18
    LOCAL             shift, and go to state 19
    TRUE              shift, and go to state 20
    FALSE             shift, and go to state 21
    NIL               shift, and go to state 22
    MINUS             shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    EXCLAMATION_MARK  shift, and go to state 26
    TILDA             shift, and go to state 27
    AT                shift, and go to state 28
    SHARP             shift, and go to state 29
    LEFT_BRACKET      shift, and go to state 31
    LEFT_PAREN        shift, and go to state 32
    LEFT_QUASI_QUOTE  shift, and go to state 33
    DOUBLE_COLON      shift, and go to state 35

    expr            go to state 162
    term            go to state 38
    assignexpr      go to state 39
    primary         go to state 40
    lvalue          go to state 41
    member          go to state 42
    call            go to state 43
    objectdef       go to state 44
    const           go to state 48
    quasiquotes     go to state 56
    escape          go to state 58
    inline          go to state 59
    unparsed        go to state 60
    compiledstring  go to state 61


State 111

   27 expr: expr LESS_OR_EQUAL • expr

    INTCONST          shift, and go to state 6
    REALCONST         shift, and go to state 7
    STRINGCONST       shift, and go to state 8
    ID                shift, and go to state 9
    DOLLAR_IDENT      shift, and go to state 10
    NOT               shift, and go to state 18
    LOCAL             shift, and go to state 19
    TRUE              shift, and go to state 20
    FALSE             shift, and go to state 21
    NIL               shift, and go to state 22
    MINUS             shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    EXCLAMATION_MARK  shift, and go to state 26
    TILDA             shift, and go to state 27
    AT                shift, and go to state 28
    SHARP             shift, and go to state 29
    LEFT_BRACKET      shift, and go to state 31
    LEFT_PAREN        shift, and go to state 32
    LEFT_QUASI_QUOTE  shift, and go to state 33
    DOUBLE_COLON      shift, and go to state 35

    expr            go to state 163
    term            go to state 38
    assignexpr      go to state 39
    primary         go to state 40
    lvalue          go to state 41
    member          go to state 42
    call            go to state 43
    objectdef       go to state 44
    const           go to state 48
    quasiquotes     go to state 56
    escape          go to state 58
    inline          go to state 59
    unparsed        go to state 60
    compiledstring  go to state 61


State 112

    7 stmt: expr SEMICOLON •

    $default  reduce using rule 7 (stmt)


State 113

   41 assignexpr: lvalue ASSIGNMENT • expr

    INTCONST          shift, and go to state 6
    REALCONST         shift, and go to state 7
    STRINGCONST       shift, and go to state 8
    ID                shift, and go to state 9
    DOLLAR_IDENT      shift, and go to state 10
    NOT               shift, and go to state 18
    LOCAL             shift, and go to state 19
    TRUE              shift, and go to state 20
    FALSE             shift, and go to state 21
    NIL               shift, and go to state 22
    MINUS             shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    EXCLAMATION_MARK  shift, and go to state 26
    TILDA             shift, and go to state 27
    AT                shift, and go to state 28
    SHARP             shift, and go to state 29
    LEFT_BRACKET      shift, and go to state 31
    LEFT_PAREN        shift, and go to state 32
    LEFT_QUASI_QUOTE  shift, and go to state 33
    DOUBLE_COLON      shift, and go to state 35

    expr            go to state 164
    term            go to state 38
    assignexpr      go to state 39
    primary         go to state 40
    lvalue          go to state 41
    member          go to state 42
    call            go to state 43
    objectdef       go to state 44
    const           go to state 48
    quasiquotes     go to state 56
    escape          go to state 58
    inline          go to state 59
    unparsed        go to state 60
    compiledstring  go to state 61


State 114

   37 term: lvalue PLUS_PLUS •

    $default  reduce using rule 37 (term)


State 115

   39 term: lvalue MINUS_MINUS •

    $default  reduce using rule 39 (term)


State 116

   59 member: lvalue LEFT_BRACKET • expr RIGHT_BRACKET

    INTCONST          shift, and go to state 6
    REALCONST         shift, and go to state 7
    STRINGCONST       shift, and go to state 8
    ID                shift, and go to state 9
    DOLLAR_IDENT      shift, and go to state 10
    NOT               shift, and go to state 18
    LOCAL             shift, and go to state 19
    TRUE              shift, and go to state 20
    FALSE             shift, and go to state 21
    NIL               shift, and go to state 22
    MINUS             shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    EXCLAMATION_MARK  shift, and go to state 26
    TILDA             shift, and go to state 27
    AT                shift, and go to state 28
    SHARP             shift, and go to state 29
    LEFT_BRACKET      shift, and go to state 31
    LEFT_PAREN        shift, and go to state 32
    LEFT_QUASI_QUOTE  shift, and go to state 33
    DOUBLE_COLON      shift, and go to state 35

    expr            go to state 165
    term            go to state 38
    assignexpr      go to state 39
    primary         go to state 40
    lvalue          go to state 41
    member          go to state 42
    call            go to state 43
    objectdef       go to state 44
    const           go to state 48
    quasiquotes     go to state 56
    escape          go to state 58
    inline          go to state 59
    unparsed        go to state 60
    compiledstring  go to state 61


State 117

   68 normcall: LEFT_PAREN • elist RIGHT_PAREN

    RIGHT_PAREN  reduce using rule 71 (elist)
    $default     reduce using rule 75 (commalist)

    elist          go to state 166
    elistnotempty  go to state 131
    commalist      go to state 132


State 118

   57 member: lvalue DOT • ID
   58       | lvalue DOT • DOLLAR_IDENT

    ID            shift, and go to state 167
    DOLLAR_IDENT  shift, and go to state 168


State 119

   69 methodcall: DOT_DOT • ID LEFT_PAREN elist RIGHT_PAREN

    ID  shift, and go to state 169


State 120

   64 call: lvalue callsuffix •

    $default  reduce using rule 64 (call)


State 121

   66 callsuffix: normcall •

    $default  reduce using rule 66 (callsuffix)


State 122

   67 callsuffix: methodcall •

    $default  reduce using rule 67 (callsuffix)


State 123

   62 member: call LEFT_BRACKET • expr RIGHT_BRACKET

    INTCONST          shift, and go to state 6
    REALCONST         shift, and go to state 7
    STRINGCONST       shift, and go to state 8
    ID                shift, and go to state 9
    DOLLAR_IDENT      shift, and go to state 10
    NOT               shift, and go to state 18
    LOCAL             shift, and go to state 19
    TRUE              shift, and go to state 20
    FALSE             shift, and go to state 21
    NIL               shift, and go to state 22
    MINUS             shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    EXCLAMATION_MARK  shift, and go to state 26
    TILDA             shift, and go to state 27
    AT                shift, and go to state 28
    SHARP             shift, and go to state 29
    LEFT_BRACKET      shift, and go to state 31
    LEFT_PAREN        shift, and go to state 32
    LEFT_QUASI_QUOTE  shift, and go to state 33
    DOUBLE_COLON      shift, and go to state 35

    expr            go to state 170
    term            go to state 38
    assignexpr      go to state 39
    primary         go to state 40
    lvalue          go to state 41
    member          go to state 42
    call            go to state 43
    objectdef       go to state 44
    const           go to state 48
    quasiquotes     go to state 56
    escape          go to state 58
    inline          go to state 59
    unparsed        go to state 60
    compiledstring  go to state 61


State 124

   63 call: call LEFT_PAREN • elist RIGHT_PAREN

    RIGHT_PAREN  reduce using rule 71 (elist)
    $default     reduce using rule 75 (commalist)

    elist          go to state 171
    elistnotempty  go to state 131
    commalist      go to state 132


State 125

   60 member: call DOT • ID
   61       | call DOT • DOLLAR_IDENT

    ID            shift, and go to state 172
    DOLLAR_IDENT  shift, and go to state 173


State 126

   89 funcdef: funcprefix LEFT_PAREN • idlist RIGHT_PAREN block

    ID        reduce using rule 102 (commaidlist)
    $default  reduce using rule 100 (idlist)

    idlist       go to state 174
    commaidlist  go to state 175


State 127

  106 ifstmt: ifprefix stmt •
  107       | ifprefix stmt • elseprefix stmt

    ELSE  shift, and go to state 176

    ELSE      [reduce using rule 106 (ifstmt)]
    $default  reduce using rule 106 (ifstmt)

    elseprefix  go to state 177


State 128

  110 whilecond: LEFT_PAREN • expr RIGHT_PAREN

    INTCONST          shift, and go to state 6
    REALCONST         shift, and go to state 7
    STRINGCONST       shift, and go to state 8
    ID                shift, and go to state 9
    DOLLAR_IDENT      shift, and go to state 10
    NOT               shift, and go to state 18
    LOCAL             shift, and go to state 19
    TRUE              shift, and go to state 20
    FALSE             shift, and go to state 21
    NIL               shift, and go to state 22
    MINUS             shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    EXCLAMATION_MARK  shift, and go to state 26
    TILDA             shift, and go to state 27
    AT                shift, and go to state 28
    SHARP             shift, and go to state 29
    LEFT_BRACKET      shift, and go to state 31
    LEFT_PAREN        shift, and go to state 32
    LEFT_QUASI_QUOTE  shift, and go to state 33
    DOUBLE_COLON      shift, and go to state 35

    expr            go to state 178
    term            go to state 38
    assignexpr      go to state 39
    primary         go to state 40
    lvalue          go to state 41
    member          go to state 42
    call            go to state 43
    objectdef       go to state 44
    const           go to state 48
    quasiquotes     go to state 56
    escape          go to state 58
    inline          go to state 59
    unparsed        go to state 60
    compiledstring  go to state 61


State 129

  111 whilestmt: whilestart whilecond • stmt

    error             shift, and go to state 5
    INTCONST          shift, and go to state 6
    REALCONST         shift, and go to state 7
    STRINGCONST       shift, and go to state 8
    ID                shift, and go to state 9
    DOLLAR_IDENT      shift, and go to state 10
    IF                shift, and go to state 11
    WHILE             shift, and go to state 12
    FOR               shift, and go to state 13
    FUNCTION          shift, and go to state 14
    RETURN            shift, and go to state 15
    BREAK             shift, and go to state 16
    CONTINUE          shift, and go to state 17
    NOT               shift, and go to state 18
    LOCAL             shift, and go to state 19
    TRUE              shift, and go to state 20
    FALSE             shift, and go to state 21
    NIL               shift, and go to state 22
    MINUS             shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    EXCLAMATION_MARK  shift, and go to state 26
    TILDA             shift, and go to state 27
    AT                shift, and go to state 28
    SHARP             shift, and go to state 29
    LEFT_BRACE        shift, and go to state 30
    LEFT_BRACKET      shift, and go to state 31
    LEFT_PAREN        shift, and go to state 32
    LEFT_QUASI_QUOTE  shift, and go to state 33
    SEMICOLON         shift, and go to state 34
    DOUBLE_COLON      shift, and go to state 35

    stmt            go to state 179
    expr            go to state 64
    term            go to state 38
    assignexpr      go to state 39
    primary         go to state 40
    lvalue          go to state 41
    member          go to state 42
    call            go to state 43
    objectdef       go to state 44
    block           go to state 45
    funcdef         go to state 46
    funcprefix      go to state 47
    const           go to state 48
    ifprefix        go to state 49
    ifstmt          go to state 50
    whilestart      go to state 51
    whilestmt       go to state 52
    forprefix       go to state 53
    forstmt         go to state 54
    returnstmt      go to state 55
    quasiquotes     go to state 56
    escape          go to state 58
    inline          go to state 59
    unparsed        go to state 60
    compiledstring  go to state 61


State 130

  113 forstmt: forprefix elist • RIGHT_PAREN stmt

    RIGHT_PAREN  shift, and go to state 180


State 131

   70 elist: elistnotempty •

    $default  reduce using rule 70 (elist)


State 132

   72 elistnotempty: commalist • argument
   74 commalist: commalist • argument COMMA

    INTCONST          shift, and go to state 6
    REALCONST         shift, and go to state 7
    STRINGCONST       shift, and go to state 8
    ID                shift, and go to state 181
    DOLLAR_IDENT      shift, and go to state 10
    NOT               shift, and go to state 18
    LOCAL             shift, and go to state 19
    TRUE              shift, and go to state 20
    FALSE             shift, and go to state 21
    NIL               shift, and go to state 22
    MINUS             shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    EXCLAMATION_MARK  shift, and go to state 26
    TILDA             shift, and go to state 27
    AT                shift, and go to state 28
    SHARP             shift, and go to state 29
    LEFT_BRACKET      shift, and go to state 31
    LEFT_PAREN        shift, and go to state 32
    LEFT_QUASI_QUOTE  shift, and go to state 33
    DOUBLE_COLON      shift, and go to state 35

    expr            go to state 182
    term            go to state 38
    assignexpr      go to state 39
    primary         go to state 40
    lvalue          go to state 41
    member          go to state 42
    call            go to state 43
    argument        go to state 183
    objectdef       go to state 44
    const           go to state 48
    quasiquotes     go to state 56
    escape          go to state 58
    inline          go to state 59
    unparsed        go to state 60
    compiledstring  go to state 61


State 133

  117 nonemptystmts: nonemptystmts stmt •

    $default  reduce using rule 117 (nonemptystmts)


State 134

   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MULTIPLICATION expr
   22     | expr • DIVISION expr
   23     | expr • MODULO expr
   24     | expr • GREATER_THAN expr
   25     | expr • GREATER_OR_EQUAL expr
   26     | expr • LESS_THAN expr
   27     | expr • LESS_OR_EQUAL expr
   28     | expr • EQUAL expr
   29     | expr • NOT_EQUAL expr
   30     | expr • AND expr
   31     | expr • OR expr
  105 ifprefix: IF LEFT_PAREN expr • RIGHT_PAREN

    AND               shift, and go to state 99
    OR                shift, and go to state 100
    PLUS              shift, and go to state 101
    MINUS             shift, and go to state 102
    MULTIPLICATION    shift, and go to state 103
    DIVISION          shift, and go to state 104
    MODULO            shift, and go to state 105
    EQUAL             shift, and go to state 106
    NOT_EQUAL         shift, and go to state 107
    GREATER_THAN      shift, and go to state 108
    LESS_THAN         shift, and go to state 109
    GREATER_OR_EQUAL  shift, and go to state 110
    LESS_OR_EQUAL     shift, and go to state 111
    RIGHT_PAREN       shift, and go to state 184


State 135

  112 forprefix: FOR LEFT_PAREN elist • SEMICOLON expr SEMICOLON

    SEMICOLON  shift, and go to state 185


State 136

  114 returnstmt: RETURN expr SEMICOLON •

    $default  reduce using rule 114 (returnstmt)


State 137

   65 call: LEFT_PAREN funcdef • RIGHT_PAREN LEFT_PAREN elist RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 186


State 138

   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MULTIPLICATION expr
   22     | expr • DIVISION expr
   23     | expr • MODULO expr
   24     | expr • GREATER_THAN expr
   25     | expr • GREATER_OR_EQUAL expr
   26     | expr • LESS_THAN expr
   27     | expr • LESS_OR_EQUAL expr
   28     | expr • EQUAL expr
   29     | expr • NOT_EQUAL expr
   30     | expr • AND expr
   31     | expr • OR expr
  125 inline: EXCLAMATION_MARK LEFT_PAREN expr • RIGHT_PAREN

    AND               shift, and go to state 99
    OR                shift, and go to state 100
    PLUS              shift, and go to state 101
    MINUS             shift, and go to state 102
    MULTIPLICATION    shift, and go to state 103
    DIVISION          shift, and go to state 104
    MODULO            shift, and go to state 105
    EQUAL             shift, and go to state 106
    NOT_EQUAL         shift, and go to state 107
    GREATER_THAN      shift, and go to state 108
    LESS_THAN         shift, and go to state 109
    GREATER_OR_EQUAL  shift, and go to state 110
    LESS_OR_EQUAL     shift, and go to state 111
    RIGHT_PAREN       shift, and go to state 187


State 139

   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MULTIPLICATION expr
   22     | expr • DIVISION expr
   23     | expr • MODULO expr
   24     | expr • GREATER_THAN expr
   25     | expr • GREATER_OR_EQUAL expr
   26     | expr • LESS_THAN expr
   27     | expr • LESS_OR_EQUAL expr
   28     | expr • EQUAL expr
   29     | expr • NOT_EQUAL expr
   30     | expr • AND expr
   31     | expr • OR expr
  124 escape: TILDA LEFT_PAREN expr • RIGHT_PAREN

    AND               shift, and go to state 99
    OR                shift, and go to state 100
    PLUS              shift, and go to state 101
    MINUS             shift, and go to state 102
    MULTIPLICATION    shift, and go to state 103
    DIVISION          shift, and go to state 104
    MODULO            shift, and go to state 105
    EQUAL             shift, and go to state 106
    NOT_EQUAL         shift, and go to state 107
    GREATER_THAN      shift, and go to state 108
    LESS_THAN         shift, and go to state 109
    GREATER_OR_EQUAL  shift, and go to state 110
    LESS_OR_EQUAL     shift, and go to state 111
    RIGHT_PAREN       shift, and go to state 188


State 140

   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MULTIPLICATION expr
   22     | expr • DIVISION expr
   23     | expr • MODULO expr
   24     | expr • GREATER_THAN expr
   25     | expr • GREATER_OR_EQUAL expr
   26     | expr • LESS_THAN expr
   27     | expr • LESS_OR_EQUAL expr
   28     | expr • EQUAL expr
   29     | expr • NOT_EQUAL expr
   30     | expr • AND expr
   31     | expr • OR expr
  127 compiledstring: AT LEFT_PAREN expr • RIGHT_PAREN

    AND               shift, and go to state 99
    OR                shift, and go to state 100
    PLUS              shift, and go to state 101
    MINUS             shift, and go to state 102
    MULTIPLICATION    shift, and go to state 103
    DIVISION          shift, and go to state 104
    MODULO            shift, and go to state 105
    EQUAL             shift, and go to state 106
    NOT_EQUAL         shift, and go to state 107
    GREATER_THAN      shift, and go to state 108
    LESS_THAN         shift, and go to state 109
    GREATER_OR_EQUAL  shift, and go to state 110
    LESS_OR_EQUAL     shift, and go to state 111
    RIGHT_PAREN       shift, and go to state 189


State 141

   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MULTIPLICATION expr
   22     | expr • DIVISION expr
   23     | expr • MODULO expr
   24     | expr • GREATER_THAN expr
   25     | expr • GREATER_OR_EQUAL expr
   26     | expr • LESS_THAN expr
   27     | expr • LESS_OR_EQUAL expr
   28     | expr • EQUAL expr
   29     | expr • NOT_EQUAL expr
   30     | expr • AND expr
   31     | expr • OR expr
  126 unparsed: SHARP LEFT_PAREN expr • RIGHT_PAREN

    AND               shift, and go to state 99
    OR                shift, and go to state 100
    PLUS              shift, and go to state 101
    MINUS             shift, and go to state 102
    MULTIPLICATION    shift, and go to state 103
    DIVISION          shift, and go to state 104
    MODULO            shift, and go to state 105
    EQUAL             shift, and go to state 106
    NOT_EQUAL         shift, and go to state 107
    GREATER_THAN      shift, and go to state 108
    LESS_THAN         shift, and go to state 109
    GREATER_OR_EQUAL  shift, and go to state 110
    LESS_OR_EQUAL     shift, and go to state 111
    RIGHT_PAREN       shift, and go to state 190


State 142

   88 block: LEFT_BRACE stmts RIGHT_BRACE •

    $default  reduce using rule 88 (block)


State 143

   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MULTIPLICATION expr
   22     | expr • DIVISION expr
   23     | expr • MODULO expr
   24     | expr • GREATER_THAN expr
   25     | expr • GREATER_OR_EQUAL expr
   26     | expr • LESS_THAN expr
   27     | expr • LESS_OR_EQUAL expr
   28     | expr • EQUAL expr
   29     | expr • NOT_EQUAL expr
   30     | expr • AND expr
   31     | expr • OR expr
   73 objelistnotempty: objcommalist expr •
   76 objcommalist: objcommalist expr • COMMA

    AND               shift, and go to state 99
    OR                shift, and go to state 100
    PLUS              shift, and go to state 101
    MINUS             shift, and go to state 102
    MULTIPLICATION    shift, and go to state 103
    DIVISION          shift, and go to state 104
    MODULO            shift, and go to state 105
    EQUAL             shift, and go to state 106
    NOT_EQUAL         shift, and go to state 107
    GREATER_THAN      shift, and go to state 108
    LESS_THAN         shift, and go to state 109
    GREATER_OR_EQUAL  shift, and go to state 110
    LESS_OR_EQUAL     shift, and go to state 111
    COMMA             shift, and go to state 191

    $default  reduce using rule 73 (objelistnotempty)


State 144

   80 objectdef: LEFT_BRACKET objectdinner RIGHT_BRACKET •

    $default  reduce using rule 80 (objectdef)


State 145

   87 indexedelem: LEFT_BRACE • expr COLON expr RIGHT_BRACE

    INTCONST          shift, and go to state 6
    REALCONST         shift, and go to state 7
    STRINGCONST       shift, and go to state 8
    ID                shift, and go to state 9
    DOLLAR_IDENT      shift, and go to state 10
    NOT               shift, and go to state 18
    LOCAL             shift, and go to state 19
    TRUE              shift, and go to state 20
    FALSE             shift, and go to state 21
    NIL               shift, and go to state 22
    MINUS             shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    EXCLAMATION_MARK  shift, and go to state 26
    TILDA             shift, and go to state 27
    AT                shift, and go to state 28
    SHARP             shift, and go to state 29
    LEFT_BRACKET      shift, and go to state 31
    LEFT_PAREN        shift, and go to state 32
    LEFT_QUASI_QUOTE  shift, and go to state 33
    DOUBLE_COLON      shift, and go to state 35

    expr            go to state 192
    term            go to state 38
    assignexpr      go to state 39
    primary         go to state 40
    lvalue          go to state 41
    member          go to state 42
    call            go to state 43
    objectdef       go to state 44
    const           go to state 48
    quasiquotes     go to state 56
    escape          go to state 58
    inline          go to state 59
    unparsed        go to state 60
    compiledstring  go to state 61


State 146

   84 indexed: commaindexed indexedelem •
   85 commaindexed: commaindexed indexedelem • COMMA

    COMMA  shift, and go to state 193

    $default  reduce using rule 84 (indexed)


State 147

   33 term: LEFT_PAREN expr RIGHT_PAREN •

    $default  reduce using rule 33 (term)


State 148

   50 primary: LEFT_PAREN funcdef RIGHT_PAREN •
   65 call: LEFT_PAREN funcdef RIGHT_PAREN • LEFT_PAREN elist RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 194

    $default  reduce using rule 50 (primary)


State 149

  119 objelistmulti: objelistmulti COMMA • expr

    INTCONST          shift, and go to state 6
    REALCONST         shift, and go to state 7
    STRINGCONST       shift, and go to state 8
    ID                shift, and go to state 9
    DOLLAR_IDENT      shift, and go to state 10
    NOT               shift, and go to state 18
    LOCAL             shift, and go to state 19
    TRUE              shift, and go to state 20
    FALSE             shift, and go to state 21
    NIL               shift, and go to state 22
    MINUS             shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    EXCLAMATION_MARK  shift, and go to state 26
    TILDA             shift, and go to state 27
    AT                shift, and go to state 28
    SHARP             shift, and go to state 29
    LEFT_BRACKET      shift, and go to state 31
    LEFT_PAREN        shift, and go to state 32
    LEFT_QUASI_QUOTE  shift, and go to state 33
    DOUBLE_COLON      shift, and go to state 35

    expr            go to state 195
    term            go to state 38
    assignexpr      go to state 39
    primary         go to state 40
    lvalue          go to state 41
    member          go to state 42
    call            go to state 43
    objectdef       go to state 44
    const           go to state 48
    quasiquotes     go to state 56
    escape          go to state 58
    inline          go to state 59
    unparsed        go to state 60
    compiledstring  go to state 61


State 150

  116 quasiquotes: LEFT_QUASI_QUOTE quotedrules RIGHT_QUASI_QUOTE •

    $default  reduce using rule 116 (quasiquotes)


State 151

   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MULTIPLICATION expr
   22     | expr • DIVISION expr
   23     | expr • MODULO expr
   24     | expr • GREATER_THAN expr
   25     | expr • GREATER_OR_EQUAL expr
   26     | expr • LESS_THAN expr
   27     | expr • LESS_OR_EQUAL expr
   28     | expr • EQUAL expr
   29     | expr • NOT_EQUAL expr
   30     | expr • AND expr
   30     | expr AND expr •
   31     | expr • OR expr

    PLUS              shift, and go to state 101
    MINUS             shift, and go to state 102
    MULTIPLICATION    shift, and go to state 103
    DIVISION          shift, and go to state 104
    MODULO            shift, and go to state 105
    EQUAL             shift, and go to state 106
    NOT_EQUAL         shift, and go to state 107
    GREATER_THAN      shift, and go to state 108
    LESS_THAN         shift, and go to state 109
    GREATER_OR_EQUAL  shift, and go to state 110
    LESS_OR_EQUAL     shift, and go to state 111

    $default  reduce using rule 30 (expr)


State 152

   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MULTIPLICATION expr
   22     | expr • DIVISION expr
   23     | expr • MODULO expr
   24     | expr • GREATER_THAN expr
   25     | expr • GREATER_OR_EQUAL expr
   26     | expr • LESS_THAN expr
   27     | expr • LESS_OR_EQUAL expr
   28     | expr • EQUAL expr
   29     | expr • NOT_EQUAL expr
   30     | expr • AND expr
   31     | expr • OR expr
   31     | expr OR expr •

    AND               shift, and go to state 99
    PLUS              shift, and go to state 101
    MINUS             shift, and go to state 102
    MULTIPLICATION    shift, and go to state 103
    DIVISION          shift, and go to state 104
    MODULO            shift, and go to state 105
    EQUAL             shift, and go to state 106
    NOT_EQUAL         shift, and go to state 107
    GREATER_THAN      shift, and go to state 108
    LESS_THAN         shift, and go to state 109
    GREATER_OR_EQUAL  shift, and go to state 110
    LESS_OR_EQUAL     shift, and go to state 111

    $default  reduce using rule 31 (expr)


State 153

   19 expr: expr • PLUS expr
   19     | expr PLUS expr •
   20     | expr • MINUS expr
   21     | expr • MULTIPLICATION expr
   22     | expr • DIVISION expr
   23     | expr • MODULO expr
   24     | expr • GREATER_THAN expr
   25     | expr • GREATER_OR_EQUAL expr
   26     | expr • LESS_THAN expr
   27     | expr • LESS_OR_EQUAL expr
   28     | expr • EQUAL expr
   29     | expr • NOT_EQUAL expr
   30     | expr • AND expr
   31     | expr • OR expr

    MULTIPLICATION  shift, and go to state 103
    DIVISION        shift, and go to state 104
    MODULO          shift, and go to state 105

    $default  reduce using rule 19 (expr)


State 154

   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   20     | expr MINUS expr •
   21     | expr • MULTIPLICATION expr
   22     | expr • DIVISION expr
   23     | expr • MODULO expr
   24     | expr • GREATER_THAN expr
   25     | expr • GREATER_OR_EQUAL expr
   26     | expr • LESS_THAN expr
   27     | expr • LESS_OR_EQUAL expr
   28     | expr • EQUAL expr
   29     | expr • NOT_EQUAL expr
   30     | expr • AND expr
   31     | expr • OR expr

    MULTIPLICATION  shift, and go to state 103
    DIVISION        shift, and go to state 104
    MODULO          shift, and go to state 105

    $default  reduce using rule 20 (expr)


State 155

   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MULTIPLICATION expr
   21     | expr MULTIPLICATION expr •
   22     | expr • DIVISION expr
   23     | expr • MODULO expr
   24     | expr • GREATER_THAN expr
   25     | expr • GREATER_OR_EQUAL expr
   26     | expr • LESS_THAN expr
   27     | expr • LESS_OR_EQUAL expr
   28     | expr • EQUAL expr
   29     | expr • NOT_EQUAL expr
   30     | expr • AND expr
   31     | expr • OR expr

    $default  reduce using rule 21 (expr)


State 156

   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MULTIPLICATION expr
   22     | expr • DIVISION expr
   22     | expr DIVISION expr •
   23     | expr • MODULO expr
   24     | expr • GREATER_THAN expr
   25     | expr • GREATER_OR_EQUAL expr
   26     | expr • LESS_THAN expr
   27     | expr • LESS_OR_EQUAL expr
   28     | expr • EQUAL expr
   29     | expr • NOT_EQUAL expr
   30     | expr • AND expr
   31     | expr • OR expr

    $default  reduce using rule 22 (expr)


State 157

   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MULTIPLICATION expr
   22     | expr • DIVISION expr
   23     | expr • MODULO expr
   23     | expr MODULO expr •
   24     | expr • GREATER_THAN expr
   25     | expr • GREATER_OR_EQUAL expr
   26     | expr • LESS_THAN expr
   27     | expr • LESS_OR_EQUAL expr
   28     | expr • EQUAL expr
   29     | expr • NOT_EQUAL expr
   30     | expr • AND expr
   31     | expr • OR expr

    $default  reduce using rule 23 (expr)


State 158

   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MULTIPLICATION expr
   22     | expr • DIVISION expr
   23     | expr • MODULO expr
   24     | expr • GREATER_THAN expr
   25     | expr • GREATER_OR_EQUAL expr
   26     | expr • LESS_THAN expr
   27     | expr • LESS_OR_EQUAL expr
   28     | expr • EQUAL expr
   28     | expr EQUAL expr •
   29     | expr • NOT_EQUAL expr
   30     | expr • AND expr
   31     | expr • OR expr

    PLUS              shift, and go to state 101
    MINUS             shift, and go to state 102
    MULTIPLICATION    shift, and go to state 103
    DIVISION          shift, and go to state 104
    MODULO            shift, and go to state 105
    GREATER_THAN      shift, and go to state 108
    LESS_THAN         shift, and go to state 109
    GREATER_OR_EQUAL  shift, and go to state 110
    LESS_OR_EQUAL     shift, and go to state 111

    EQUAL      error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 28 (expr)


State 159

   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MULTIPLICATION expr
   22     | expr • DIVISION expr
   23     | expr • MODULO expr
   24     | expr • GREATER_THAN expr
   25     | expr • GREATER_OR_EQUAL expr
   26     | expr • LESS_THAN expr
   27     | expr • LESS_OR_EQUAL expr
   28     | expr • EQUAL expr
   29     | expr • NOT_EQUAL expr
   29     | expr NOT_EQUAL expr •
   30     | expr • AND expr
   31     | expr • OR expr

    PLUS              shift, and go to state 101
    MINUS             shift, and go to state 102
    MULTIPLICATION    shift, and go to state 103
    DIVISION          shift, and go to state 104
    MODULO            shift, and go to state 105
    GREATER_THAN      shift, and go to state 108
    LESS_THAN         shift, and go to state 109
    GREATER_OR_EQUAL  shift, and go to state 110
    LESS_OR_EQUAL     shift, and go to state 111

    EQUAL      error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 29 (expr)


State 160

   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MULTIPLICATION expr
   22     | expr • DIVISION expr
   23     | expr • MODULO expr
   24     | expr • GREATER_THAN expr
   24     | expr GREATER_THAN expr •
   25     | expr • GREATER_OR_EQUAL expr
   26     | expr • LESS_THAN expr
   27     | expr • LESS_OR_EQUAL expr
   28     | expr • EQUAL expr
   29     | expr • NOT_EQUAL expr
   30     | expr • AND expr
   31     | expr • OR expr

    PLUS            shift, and go to state 101
    MINUS           shift, and go to state 102
    MULTIPLICATION  shift, and go to state 103
    DIVISION        shift, and go to state 104
    MODULO          shift, and go to state 105

    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)

    $default  reduce using rule 24 (expr)


State 161

   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MULTIPLICATION expr
   22     | expr • DIVISION expr
   23     | expr • MODULO expr
   24     | expr • GREATER_THAN expr
   25     | expr • GREATER_OR_EQUAL expr
   26     | expr • LESS_THAN expr
   26     | expr LESS_THAN expr •
   27     | expr • LESS_OR_EQUAL expr
   28     | expr • EQUAL expr
   29     | expr • NOT_EQUAL expr
   30     | expr • AND expr
   31     | expr • OR expr

    PLUS            shift, and go to state 101
    MINUS           shift, and go to state 102
    MULTIPLICATION  shift, and go to state 103
    DIVISION        shift, and go to state 104
    MODULO          shift, and go to state 105

    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)

    $default  reduce using rule 26 (expr)


State 162

   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MULTIPLICATION expr
   22     | expr • DIVISION expr
   23     | expr • MODULO expr
   24     | expr • GREATER_THAN expr
   25     | expr • GREATER_OR_EQUAL expr
   25     | expr GREATER_OR_EQUAL expr •
   26     | expr • LESS_THAN expr
   27     | expr • LESS_OR_EQUAL expr
   28     | expr • EQUAL expr
   29     | expr • NOT_EQUAL expr
   30     | expr • AND expr
   31     | expr • OR expr

    PLUS            shift, and go to state 101
    MINUS           shift, and go to state 102
    MULTIPLICATION  shift, and go to state 103
    DIVISION        shift, and go to state 104
    MODULO          shift, and go to state 105

    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)

    $default  reduce using rule 25 (expr)


State 163

   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MULTIPLICATION expr
   22     | expr • DIVISION expr
   23     | expr • MODULO expr
   24     | expr • GREATER_THAN expr
   25     | expr • GREATER_OR_EQUAL expr
   26     | expr • LESS_THAN expr
   27     | expr • LESS_OR_EQUAL expr
   27     | expr LESS_OR_EQUAL expr •
   28     | expr • EQUAL expr
   29     | expr • NOT_EQUAL expr
   30     | expr • AND expr
   31     | expr • OR expr

    PLUS            shift, and go to state 101
    MINUS           shift, and go to state 102
    MULTIPLICATION  shift, and go to state 103
    DIVISION        shift, and go to state 104
    MODULO          shift, and go to state 105

    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)

    $default  reduce using rule 27 (expr)


State 164

   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MULTIPLICATION expr
   22     | expr • DIVISION expr
   23     | expr • MODULO expr
   24     | expr • GREATER_THAN expr
   25     | expr • GREATER_OR_EQUAL expr
   26     | expr • LESS_THAN expr
   27     | expr • LESS_OR_EQUAL expr
   28     | expr • EQUAL expr
   29     | expr • NOT_EQUAL expr
   30     | expr • AND expr
   31     | expr • OR expr
   41 assignexpr: lvalue ASSIGNMENT expr •

    AND               shift, and go to state 99
    OR                shift, and go to state 100
    PLUS              shift, and go to state 101
    MINUS             shift, and go to state 102
    MULTIPLICATION    shift, and go to state 103
    DIVISION          shift, and go to state 104
    MODULO            shift, and go to state 105
    EQUAL             shift, and go to state 106
    NOT_EQUAL         shift, and go to state 107
    GREATER_THAN      shift, and go to state 108
    LESS_THAN         shift, and go to state 109
    GREATER_OR_EQUAL  shift, and go to state 110
    LESS_OR_EQUAL     shift, and go to state 111

    $default  reduce using rule 41 (assignexpr)


State 165

   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MULTIPLICATION expr
   22     | expr • DIVISION expr
   23     | expr • MODULO expr
   24     | expr • GREATER_THAN expr
   25     | expr • GREATER_OR_EQUAL expr
   26     | expr • LESS_THAN expr
   27     | expr • LESS_OR_EQUAL expr
   28     | expr • EQUAL expr
   29     | expr • NOT_EQUAL expr
   30     | expr • AND expr
   31     | expr • OR expr
   59 member: lvalue LEFT_BRACKET expr • RIGHT_BRACKET

    AND               shift, and go to state 99
    OR                shift, and go to state 100
    PLUS              shift, and go to state 101
    MINUS             shift, and go to state 102
    MULTIPLICATION    shift, and go to state 103
    DIVISION          shift, and go to state 104
    MODULO            shift, and go to state 105
    EQUAL             shift, and go to state 106
    NOT_EQUAL         shift, and go to state 107
    GREATER_THAN      shift, and go to state 108
    LESS_THAN         shift, and go to state 109
    GREATER_OR_EQUAL  shift, and go to state 110
    LESS_OR_EQUAL     shift, and go to state 111
    RIGHT_BRACKET     shift, and go to state 196


State 166

   68 normcall: LEFT_PAREN elist • RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 197


State 167

   57 member: lvalue DOT ID •

    $default  reduce using rule 57 (member)


State 168

   58 member: lvalue DOT DOLLAR_IDENT •

    $default  reduce using rule 58 (member)


State 169

   69 methodcall: DOT_DOT ID • LEFT_PAREN elist RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 198


State 170

   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MULTIPLICATION expr
   22     | expr • DIVISION expr
   23     | expr • MODULO expr
   24     | expr • GREATER_THAN expr
   25     | expr • GREATER_OR_EQUAL expr
   26     | expr • LESS_THAN expr
   27     | expr • LESS_OR_EQUAL expr
   28     | expr • EQUAL expr
   29     | expr • NOT_EQUAL expr
   30     | expr • AND expr
   31     | expr • OR expr
   62 member: call LEFT_BRACKET expr • RIGHT_BRACKET

    AND               shift, and go to state 99
    OR                shift, and go to state 100
    PLUS              shift, and go to state 101
    MINUS             shift, and go to state 102
    MULTIPLICATION    shift, and go to state 103
    DIVISION          shift, and go to state 104
    MODULO            shift, and go to state 105
    EQUAL             shift, and go to state 106
    NOT_EQUAL         shift, and go to state 107
    GREATER_THAN      shift, and go to state 108
    LESS_THAN         shift, and go to state 109
    GREATER_OR_EQUAL  shift, and go to state 110
    LESS_OR_EQUAL     shift, and go to state 111
    RIGHT_BRACKET     shift, and go to state 199


State 171

   63 call: call LEFT_PAREN elist • RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 200


State 172

   60 member: call DOT ID •

    $default  reduce using rule 60 (member)


State 173

   61 member: call DOT DOLLAR_IDENT •

    $default  reduce using rule 61 (member)


State 174

   89 funcdef: funcprefix LEFT_PAREN idlist • RIGHT_PAREN block

    RIGHT_PAREN  shift, and go to state 201


State 175

   99 idlist: commaidlist • formal
  101 commaidlist: commaidlist • formal COMMA

    ID  shift, and go to state 202

    formal  go to state 203


State 176

  108 elseprefix: ELSE •

    $default  reduce using rule 108 (elseprefix)


State 177

  107 ifstmt: ifprefix stmt elseprefix • stmt

    error             shift, and go to state 5
    INTCONST          shift, and go to state 6
    REALCONST         shift, and go to state 7
    STRINGCONST       shift, and go to state 8
    ID                shift, and go to state 9
    DOLLAR_IDENT      shift, and go to state 10
    IF                shift, and go to state 11
    WHILE             shift, and go to state 12
    FOR               shift, and go to state 13
    FUNCTION          shift, and go to state 14
    RETURN            shift, and go to state 15
    BREAK             shift, and go to state 16
    CONTINUE          shift, and go to state 17
    NOT               shift, and go to state 18
    LOCAL             shift, and go to state 19
    TRUE              shift, and go to state 20
    FALSE             shift, and go to state 21
    NIL               shift, and go to state 22
    MINUS             shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    EXCLAMATION_MARK  shift, and go to state 26
    TILDA             shift, and go to state 27
    AT                shift, and go to state 28
    SHARP             shift, and go to state 29
    LEFT_BRACE        shift, and go to state 30
    LEFT_BRACKET      shift, and go to state 31
    LEFT_PAREN        shift, and go to state 32
    LEFT_QUASI_QUOTE  shift, and go to state 33
    SEMICOLON         shift, and go to state 34
    DOUBLE_COLON      shift, and go to state 35

    stmt            go to state 204
    expr            go to state 64
    term            go to state 38
    assignexpr      go to state 39
    primary         go to state 40
    lvalue          go to state 41
    member          go to state 42
    call            go to state 43
    objectdef       go to state 44
    block           go to state 45
    funcdef         go to state 46
    funcprefix      go to state 47
    const           go to state 48
    ifprefix        go to state 49
    ifstmt          go to state 50
    whilestart      go to state 51
    whilestmt       go to state 52
    forprefix       go to state 53
    forstmt         go to state 54
    returnstmt      go to state 55
    quasiquotes     go to state 56
    escape          go to state 58
    inline          go to state 59
    unparsed        go to state 60
    compiledstring  go to state 61


State 178

   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MULTIPLICATION expr
   22     | expr • DIVISION expr
   23     | expr • MODULO expr
   24     | expr • GREATER_THAN expr
   25     | expr • GREATER_OR_EQUAL expr
   26     | expr • LESS_THAN expr
   27     | expr • LESS_OR_EQUAL expr
   28     | expr • EQUAL expr
   29     | expr • NOT_EQUAL expr
   30     | expr • AND expr
   31     | expr • OR expr
  110 whilecond: LEFT_PAREN expr • RIGHT_PAREN

    AND               shift, and go to state 99
    OR                shift, and go to state 100
    PLUS              shift, and go to state 101
    MINUS             shift, and go to state 102
    MULTIPLICATION    shift, and go to state 103
    DIVISION          shift, and go to state 104
    MODULO            shift, and go to state 105
    EQUAL             shift, and go to state 106
    NOT_EQUAL         shift, and go to state 107
    GREATER_THAN      shift, and go to state 108
    LESS_THAN         shift, and go to state 109
    GREATER_OR_EQUAL  shift, and go to state 110
    LESS_OR_EQUAL     shift, and go to state 111
    RIGHT_PAREN       shift, and go to state 205


State 179

  111 whilestmt: whilestart whilecond stmt •

    $default  reduce using rule 111 (whilestmt)


State 180

  113 forstmt: forprefix elist RIGHT_PAREN • stmt

    error             shift, and go to state 5
    INTCONST          shift, and go to state 6
    REALCONST         shift, and go to state 7
    STRINGCONST       shift, and go to state 8
    ID                shift, and go to state 9
    DOLLAR_IDENT      shift, and go to state 10
    IF                shift, and go to state 11
    WHILE             shift, and go to state 12
    FOR               shift, and go to state 13
    FUNCTION          shift, and go to state 14
    RETURN            shift, and go to state 15
    BREAK             shift, and go to state 16
    CONTINUE          shift, and go to state 17
    NOT               shift, and go to state 18
    LOCAL             shift, and go to state 19
    TRUE              shift, and go to state 20
    FALSE             shift, and go to state 21
    NIL               shift, and go to state 22
    MINUS             shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    EXCLAMATION_MARK  shift, and go to state 26
    TILDA             shift, and go to state 27
    AT                shift, and go to state 28
    SHARP             shift, and go to state 29
    LEFT_BRACE        shift, and go to state 30
    LEFT_BRACKET      shift, and go to state 31
    LEFT_PAREN        shift, and go to state 32
    LEFT_QUASI_QUOTE  shift, and go to state 33
    SEMICOLON         shift, and go to state 34
    DOUBLE_COLON      shift, and go to state 35

    stmt            go to state 206
    expr            go to state 64
    term            go to state 38
    assignexpr      go to state 39
    primary         go to state 40
    lvalue          go to state 41
    member          go to state 42
    call            go to state 43
    objectdef       go to state 44
    block           go to state 45
    funcdef         go to state 46
    funcprefix      go to state 47
    const           go to state 48
    ifprefix        go to state 49
    ifstmt          go to state 50
    whilestart      go to state 51
    whilestmt       go to state 52
    forprefix       go to state 53
    forstmt         go to state 54
    returnstmt      go to state 55
    quasiquotes     go to state 56
    escape          go to state 58
    inline          go to state 59
    unparsed        go to state 60
    compiledstring  go to state 61


State 181

   52 lvalue: ID •
   79 argument: ID • COLON expr

    COLON  shift, and go to state 207

    $default  reduce using rule 52 (lvalue)


State 182

   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MULTIPLICATION expr
   22     | expr • DIVISION expr
   23     | expr • MODULO expr
   24     | expr • GREATER_THAN expr
   25     | expr • GREATER_OR_EQUAL expr
   26     | expr • LESS_THAN expr
   27     | expr • LESS_OR_EQUAL expr
   28     | expr • EQUAL expr
   29     | expr • NOT_EQUAL expr
   30     | expr • AND expr
   31     | expr • OR expr
   78 argument: expr •

    AND               shift, and go to state 99
    OR                shift, and go to state 100
    PLUS              shift, and go to state 101
    MINUS             shift, and go to state 102
    MULTIPLICATION    shift, and go to state 103
    DIVISION          shift, and go to state 104
    MODULO            shift, and go to state 105
    EQUAL             shift, and go to state 106
    NOT_EQUAL         shift, and go to state 107
    GREATER_THAN      shift, and go to state 108
    LESS_THAN         shift, and go to state 109
    GREATER_OR_EQUAL  shift, and go to state 110
    LESS_OR_EQUAL     shift, and go to state 111

    $default  reduce using rule 78 (argument)


State 183

   72 elistnotempty: commalist argument •
   74 commalist: commalist argument • COMMA

    COMMA  shift, and go to state 208

    $default  reduce using rule 72 (elistnotempty)


State 184

  105 ifprefix: IF LEFT_PAREN expr RIGHT_PAREN •

    $default  reduce using rule 105 (ifprefix)


State 185

  112 forprefix: FOR LEFT_PAREN elist SEMICOLON • expr SEMICOLON

    INTCONST          shift, and go to state 6
    REALCONST         shift, and go to state 7
    STRINGCONST       shift, and go to state 8
    ID                shift, and go to state 9
    DOLLAR_IDENT      shift, and go to state 10
    NOT               shift, and go to state 18
    LOCAL             shift, and go to state 19
    TRUE              shift, and go to state 20
    FALSE             shift, and go to state 21
    NIL               shift, and go to state 22
    MINUS             shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    EXCLAMATION_MARK  shift, and go to state 26
    TILDA             shift, and go to state 27
    AT                shift, and go to state 28
    SHARP             shift, and go to state 29
    LEFT_BRACKET      shift, and go to state 31
    LEFT_PAREN        shift, and go to state 32
    LEFT_QUASI_QUOTE  shift, and go to state 33
    DOUBLE_COLON      shift, and go to state 35

    expr            go to state 209
    term            go to state 38
    assignexpr      go to state 39
    primary         go to state 40
    lvalue          go to state 41
    member          go to state 42
    call            go to state 43
    objectdef       go to state 44
    const           go to state 48
    quasiquotes     go to state 56
    escape          go to state 58
    inline          go to state 59
    unparsed        go to state 60
    compiledstring  go to state 61


State 186

   65 call: LEFT_PAREN funcdef RIGHT_PAREN • LEFT_PAREN elist RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 194


State 187

  125 inline: EXCLAMATION_MARK LEFT_PAREN expr RIGHT_PAREN •

    $default  reduce using rule 125 (inline)


State 188

  124 escape: TILDA LEFT_PAREN expr RIGHT_PAREN •

    $default  reduce using rule 124 (escape)


State 189

  127 compiledstring: AT LEFT_PAREN expr RIGHT_PAREN •

    $default  reduce using rule 127 (compiledstring)


State 190

  126 unparsed: SHARP LEFT_PAREN expr RIGHT_PAREN •

    $default  reduce using rule 126 (unparsed)


State 191

   76 objcommalist: objcommalist expr COMMA •

    $default  reduce using rule 76 (objcommalist)


State 192

   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MULTIPLICATION expr
   22     | expr • DIVISION expr
   23     | expr • MODULO expr
   24     | expr • GREATER_THAN expr
   25     | expr • GREATER_OR_EQUAL expr
   26     | expr • LESS_THAN expr
   27     | expr • LESS_OR_EQUAL expr
   28     | expr • EQUAL expr
   29     | expr • NOT_EQUAL expr
   30     | expr • AND expr
   31     | expr • OR expr
   87 indexedelem: LEFT_BRACE expr • COLON expr RIGHT_BRACE

    AND               shift, and go to state 99
    OR                shift, and go to state 100
    PLUS              shift, and go to state 101
    MINUS             shift, and go to state 102
    MULTIPLICATION    shift, and go to state 103
    DIVISION          shift, and go to state 104
    MODULO            shift, and go to state 105
    EQUAL             shift, and go to state 106
    NOT_EQUAL         shift, and go to state 107
    GREATER_THAN      shift, and go to state 108
    LESS_THAN         shift, and go to state 109
    GREATER_OR_EQUAL  shift, and go to state 110
    LESS_OR_EQUAL     shift, and go to state 111
    COLON             shift, and go to state 210


State 193

   85 commaindexed: commaindexed indexedelem COMMA •

    $default  reduce using rule 85 (commaindexed)


State 194

   65 call: LEFT_PAREN funcdef RIGHT_PAREN LEFT_PAREN • elist RIGHT_PAREN

    RIGHT_PAREN  reduce using rule 71 (elist)
    $default     reduce using rule 75 (commalist)

    elist          go to state 211
    elistnotempty  go to state 131
    commalist      go to state 132


State 195

   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MULTIPLICATION expr
   22     | expr • DIVISION expr
   23     | expr • MODULO expr
   24     | expr • GREATER_THAN expr
   25     | expr • GREATER_OR_EQUAL expr
   26     | expr • LESS_THAN expr
   27     | expr • LESS_OR_EQUAL expr
   28     | expr • EQUAL expr
   29     | expr • NOT_EQUAL expr
   30     | expr • AND expr
   31     | expr • OR expr
  119 objelistmulti: objelistmulti COMMA expr •

    AND               shift, and go to state 99
    OR                shift, and go to state 100
    PLUS              shift, and go to state 101
    MINUS             shift, and go to state 102
    MULTIPLICATION    shift, and go to state 103
    DIVISION          shift, and go to state 104
    MODULO            shift, and go to state 105
    EQUAL             shift, and go to state 106
    NOT_EQUAL         shift, and go to state 107
    GREATER_THAN      shift, and go to state 108
    LESS_THAN         shift, and go to state 109
    GREATER_OR_EQUAL  shift, and go to state 110
    LESS_OR_EQUAL     shift, and go to state 111

    $default  reduce using rule 119 (objelistmulti)


State 196

   59 member: lvalue LEFT_BRACKET expr RIGHT_BRACKET •

    $default  reduce using rule 59 (member)


State 197

   68 normcall: LEFT_PAREN elist RIGHT_PAREN •

    $default  reduce using rule 68 (normcall)


State 198

   69 methodcall: DOT_DOT ID LEFT_PAREN • elist RIGHT_PAREN

    RIGHT_PAREN  reduce using rule 71 (elist)
    $default     reduce using rule 75 (commalist)

    elist          go to state 212
    elistnotempty  go to state 131
    commalist      go to state 132


State 199

   62 member: call LEFT_BRACKET expr RIGHT_BRACKET •

    $default  reduce using rule 62 (member)


State 200

   63 call: call LEFT_PAREN elist RIGHT_PAREN •

    $default  reduce using rule 63 (call)


State 201

   89 funcdef: funcprefix LEFT_PAREN idlist RIGHT_PAREN • block

    LEFT_BRACE  shift, and go to state 30

    block  go to state 213


State 202

  103 formal: ID •
  104       | ID • ASSIGNMENT expr

    ASSIGNMENT  shift, and go to state 214

    $default  reduce using rule 103 (formal)


State 203

   99 idlist: commaidlist formal •
  101 commaidlist: commaidlist formal • COMMA

    COMMA  shift, and go to state 215

    $default  reduce using rule 99 (idlist)


State 204

  107 ifstmt: ifprefix stmt elseprefix stmt •

    $default  reduce using rule 107 (ifstmt)


State 205

  110 whilecond: LEFT_PAREN expr RIGHT_PAREN •

    $default  reduce using rule 110 (whilecond)


State 206

  113 forstmt: forprefix elist RIGHT_PAREN stmt •

    $default  reduce using rule 113 (forstmt)


State 207

   79 argument: ID COLON • expr

    INTCONST          shift, and go to state 6
    REALCONST         shift, and go to state 7
    STRINGCONST       shift, and go to state 8
    ID                shift, and go to state 9
    DOLLAR_IDENT      shift, and go to state 10
    NOT               shift, and go to state 18
    LOCAL             shift, and go to state 19
    TRUE              shift, and go to state 20
    FALSE             shift, and go to state 21
    NIL               shift, and go to state 22
    MINUS             shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    EXCLAMATION_MARK  shift, and go to state 26
    TILDA             shift, and go to state 27
    AT                shift, and go to state 28
    SHARP             shift, and go to state 29
    LEFT_BRACKET      shift, and go to state 31
    LEFT_PAREN        shift, and go to state 32
    LEFT_QUASI_QUOTE  shift, and go to state 33
    DOUBLE_COLON      shift, and go to state 35

    expr            go to state 216
    term            go to state 38
    assignexpr      go to state 39
    primary         go to state 40
    lvalue          go to state 41
    member          go to state 42
    call            go to state 43
    objectdef       go to state 44
    const           go to state 48
    quasiquotes     go to state 56
    escape          go to state 58
    inline          go to state 59
    unparsed        go to state 60
    compiledstring  go to state 61


State 208

   74 commalist: commalist argument COMMA •

    $default  reduce using rule 74 (commalist)


State 209

   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MULTIPLICATION expr
   22     | expr • DIVISION expr
   23     | expr • MODULO expr
   24     | expr • GREATER_THAN expr
   25     | expr • GREATER_OR_EQUAL expr
   26     | expr • LESS_THAN expr
   27     | expr • LESS_OR_EQUAL expr
   28     | expr • EQUAL expr
   29     | expr • NOT_EQUAL expr
   30     | expr • AND expr
   31     | expr • OR expr
  112 forprefix: FOR LEFT_PAREN elist SEMICOLON expr • SEMICOLON

    AND               shift, and go to state 99
    OR                shift, and go to state 100
    PLUS              shift, and go to state 101
    MINUS             shift, and go to state 102
    MULTIPLICATION    shift, and go to state 103
    DIVISION          shift, and go to state 104
    MODULO            shift, and go to state 105
    EQUAL             shift, and go to state 106
    NOT_EQUAL         shift, and go to state 107
    GREATER_THAN      shift, and go to state 108
    LESS_THAN         shift, and go to state 109
    GREATER_OR_EQUAL  shift, and go to state 110
    LESS_OR_EQUAL     shift, and go to state 111
    SEMICOLON         shift, and go to state 217


State 210

   87 indexedelem: LEFT_BRACE expr COLON • expr RIGHT_BRACE

    INTCONST          shift, and go to state 6
    REALCONST         shift, and go to state 7
    STRINGCONST       shift, and go to state 8
    ID                shift, and go to state 9
    DOLLAR_IDENT      shift, and go to state 10
    NOT               shift, and go to state 18
    LOCAL             shift, and go to state 19
    TRUE              shift, and go to state 20
    FALSE             shift, and go to state 21
    NIL               shift, and go to state 22
    MINUS             shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    EXCLAMATION_MARK  shift, and go to state 26
    TILDA             shift, and go to state 27
    AT                shift, and go to state 28
    SHARP             shift, and go to state 29
    LEFT_BRACKET      shift, and go to state 31
    LEFT_PAREN        shift, and go to state 32
    LEFT_QUASI_QUOTE  shift, and go to state 33
    DOUBLE_COLON      shift, and go to state 35

    expr            go to state 218
    term            go to state 38
    assignexpr      go to state 39
    primary         go to state 40
    lvalue          go to state 41
    member          go to state 42
    call            go to state 43
    objectdef       go to state 44
    const           go to state 48
    quasiquotes     go to state 56
    escape          go to state 58
    inline          go to state 59
    unparsed        go to state 60
    compiledstring  go to state 61


State 211

   65 call: LEFT_PAREN funcdef RIGHT_PAREN LEFT_PAREN elist • RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 219


State 212

   69 methodcall: DOT_DOT ID LEFT_PAREN elist • RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 220


State 213

   89 funcdef: funcprefix LEFT_PAREN idlist RIGHT_PAREN block •

    $default  reduce using rule 89 (funcdef)


State 214

  104 formal: ID ASSIGNMENT • expr

    INTCONST          shift, and go to state 6
    REALCONST         shift, and go to state 7
    STRINGCONST       shift, and go to state 8
    ID                shift, and go to state 9
    DOLLAR_IDENT      shift, and go to state 10
    NOT               shift, and go to state 18
    LOCAL             shift, and go to state 19
    TRUE              shift, and go to state 20
    FALSE             shift, and go to state 21
    NIL               shift, and go to state 22
    MINUS             shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    EXCLAMATION_MARK  shift, and go to state 26
    TILDA             shift, and go to state 27
    AT                shift, and go to state 28
    SHARP             shift, and go to state 29
    LEFT_BRACKET      shift, and go to state 31
    LEFT_PAREN        shift, and go to state 32
    LEFT_QUASI_QUOTE  shift, and go to state 33
    DOUBLE_COLON      shift, and go to state 35

    expr            go to state 221
    term            go to state 38
    assignexpr      go to state 39
    primary         go to state 40
    lvalue          go to state 41
    member          go to state 42
    call            go to state 43
    objectdef       go to state 44
    const           go to state 48
    quasiquotes     go to state 56
    escape          go to state 58
    inline          go to state 59
    unparsed        go to state 60
    compiledstring  go to state 61


State 215

  101 commaidlist: commaidlist formal COMMA •

    $default  reduce using rule 101 (commaidlist)


State 216

   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MULTIPLICATION expr
   22     | expr • DIVISION expr
   23     | expr • MODULO expr
   24     | expr • GREATER_THAN expr
   25     | expr • GREATER_OR_EQUAL expr
   26     | expr • LESS_THAN expr
   27     | expr • LESS_OR_EQUAL expr
   28     | expr • EQUAL expr
   29     | expr • NOT_EQUAL expr
   30     | expr • AND expr
   31     | expr • OR expr
   79 argument: ID COLON expr •

    AND               shift, and go to state 99
    OR                shift, and go to state 100
    PLUS              shift, and go to state 101
    MINUS             shift, and go to state 102
    MULTIPLICATION    shift, and go to state 103
    DIVISION          shift, and go to state 104
    MODULO            shift, and go to state 105
    EQUAL             shift, and go to state 106
    NOT_EQUAL         shift, and go to state 107
    GREATER_THAN      shift, and go to state 108
    LESS_THAN         shift, and go to state 109
    GREATER_OR_EQUAL  shift, and go to state 110
    LESS_OR_EQUAL     shift, and go to state 111

    $default  reduce using rule 79 (argument)


State 217

  112 forprefix: FOR LEFT_PAREN elist SEMICOLON expr SEMICOLON •

    $default  reduce using rule 112 (forprefix)


State 218

   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MULTIPLICATION expr
   22     | expr • DIVISION expr
   23     | expr • MODULO expr
   24     | expr • GREATER_THAN expr
   25     | expr • GREATER_OR_EQUAL expr
   26     | expr • LESS_THAN expr
   27     | expr • LESS_OR_EQUAL expr
   28     | expr • EQUAL expr
   29     | expr • NOT_EQUAL expr
   30     | expr • AND expr
   31     | expr • OR expr
   87 indexedelem: LEFT_BRACE expr COLON expr • RIGHT_BRACE

    AND               shift, and go to state 99
    OR                shift, and go to state 100
    PLUS              shift, and go to state 101
    MINUS             shift, and go to state 102
    MULTIPLICATION    shift, and go to state 103
    DIVISION          shift, and go to state 104
    MODULO            shift, and go to state 105
    EQUAL             shift, and go to state 106
    NOT_EQUAL         shift, and go to state 107
    GREATER_THAN      shift, and go to state 108
    LESS_THAN         shift, and go to state 109
    GREATER_OR_EQUAL  shift, and go to state 110
    LESS_OR_EQUAL     shift, and go to state 111
    RIGHT_BRACE       shift, and go to state 222


State 219

   65 call: LEFT_PAREN funcdef RIGHT_PAREN LEFT_PAREN elist RIGHT_PAREN •

    $default  reduce using rule 65 (call)


State 220

   69 methodcall: DOT_DOT ID LEFT_PAREN elist RIGHT_PAREN •

    $default  reduce using rule 69 (methodcall)


State 221

   19 expr: expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MULTIPLICATION expr
   22     | expr • DIVISION expr
   23     | expr • MODULO expr
   24     | expr • GREATER_THAN expr
   25     | expr • GREATER_OR_EQUAL expr
   26     | expr • LESS_THAN expr
   27     | expr • LESS_OR_EQUAL expr
   28     | expr • EQUAL expr
   29     | expr • NOT_EQUAL expr
   30     | expr • AND expr
   31     | expr • OR expr
  104 formal: ID ASSIGNMENT expr •

    AND               shift, and go to state 99
    OR                shift, and go to state 100
    PLUS              shift, and go to state 101
    MINUS             shift, and go to state 102
    MULTIPLICATION    shift, and go to state 103
    DIVISION          shift, and go to state 104
    MODULO            shift, and go to state 105
    EQUAL             shift, and go to state 106
    NOT_EQUAL         shift, and go to state 107
    GREATER_THAN      shift, and go to state 108
    LESS_THAN         shift, and go to state 109
    GREATER_OR_EQUAL  shift, and go to state 110
    LESS_OR_EQUAL     shift, and go to state 111

    $default  reduce using rule 104 (formal)


State 222

   87 indexedelem: LEFT_BRACE expr COLON expr RIGHT_BRACE •

    $default  reduce using rule 87 (indexedelem)
