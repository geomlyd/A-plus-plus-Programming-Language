function mergeSort(array, i, j) {
	toReturn = << ; >>;
	mid = floor((i + j) / 2);
	
	if (i < j) {
		toReturn = << ~toReturn;
			~(mergeSort(~array, ~i, ~mid));
			~(mergeSort(~array, ~mid + 1, ~j));	
			merge(array, ~i, ~mid, ~j);	
		>>;
	}
	
	return toReturn;
}

function merge(array, l, m, r) {
	n1 = (m - l) + 1;
	n2 = r - m;
	
	L = [];
	R = [];
	
	for (i = 0; i < n1; i++)
		L[i] = array[l + i];
	for (j = 0; j < n2; j++)
		R[j] = array[m + 1 + j];
	
	i = 0;
	j = 0;
	k = l;
	
	while (i < n1 and j < n2) {		
		if (L[i] <= R[j]) {
			array[k] = L[i]; 
            i++; 
		}
		else {        
            array[k] = R[j]; 
            j++; 
        }
        k++; 
	}
	
	while (i < n1) {    
        array[k] = L[i]; 
        i++;
        k++; 
    } 
	
	while (j < n2) {     
        array[k] = R[j]; 
        j++;
        k++; 
    }	
}

array = [4, 6, 1, 3, 8, 0, 2, 5, 7, 9];

print("unorted array: ", array, "\n");
var = mergeSort(<<array>>, 0, objectSize(array) - 1);
!(var);
print("sorted array:  ", array, "\n");

array = [6, 8, 2, 9, 7, 1, 3, 4, 5, 0];
print("unorted array: ", array, "\n");
!(var);
print("unorted array: ", array, "\n");

array = [57, 11,	88,	42,	86,	88, 2, 84, 15, 45, 57, 3, 34, 25, 77, 29, 95, 65, 86, 78];
var = mergeSort(<<array>>, 0, objectSize(array) - 1);
print("unorted array: ", array, "\n");
!(var);
print("sorted array:  ", array, "\n");
